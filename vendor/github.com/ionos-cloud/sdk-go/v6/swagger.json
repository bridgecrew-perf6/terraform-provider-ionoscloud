{
  "swagger": "2.0",
  "info": {
    "description": "IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool. \n\n Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.",
    "version": "6.0",
    "title": "CLOUD API",
    "x-sdk-patch-level": 5
  },
  "host": "api.ionos.com",
  "basePath": "/cloudapi/v6",
  "tags": [
    {
      "name": "/"
    },
    {
      "name": "Data centers"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Servers"
    },
    {
      "name": "Images"
    },
    {
      "name": "Volumes"
    },
    {
      "name": "Snapshots"
    },
    {
      "name": "IP blocks"
    },
    {
      "name": "LANs"
    },
    {
      "name": "Network interfaces"
    },
    {
      "name": "Firewall rules"
    },
    {
      "name": "Flow Logs"
    },
    {
      "name": "Load Balancers"
    },
    {
      "name": "NAT Gateways"
    },
    {
      "name": "Network Load Balancers"
    },
    {
      "name": "Application Load Balancers"
    },
    {
      "name": "Target groups"
    },
    {
      "name": "Requests"
    },
    {
      "name": "Contract resources"
    },
    {
      "name": "User management"
    },
    {
      "name": "User S3 keys"
    },
    {
      "name": "Backup units"
    },
    {
      "name": "Kubernetes"
    },
    {
      "name": "Private Cross-Connects"
    },
    {
      "name": "Labels"
    },
    {
      "name": "Templates"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "/"
        ],
        "summary": "Display API information",
        "description": "Display API information",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Info"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "operationId": "apiInfoGet"
      }
    },
    "/datacenters": {
      "get": {
        "tags": [
          "Data centers"
        ],
        "summary": "List your data centers",
        "description": "List the data centers for your account. Default limit is the first 100 items; use pagination query parameters for listing more items.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenters"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersGet"
      },
      "post": {
        "tags": [
          "Data centers"
        ],
        "summary": "Create data centers",
        "description": "Create new data centers, and data centers that already contain elements, such as servers and storage volumes.\n\nVirtual data centers are the foundation of the platform; they act as logical containers for all other objects you create, such as servers and storage volumes. You can provision as many data centers as needed. Data centers have their own private networks and are logically segmented from each other to create isolation.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "datacenter",
            "description": "The data center to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datacenter"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersPost"
      }
    },
    "/datacenters/{datacenterId}": {
      "get": {
        "tags": [
          "Data centers"
        ],
        "summary": "Retrieve data centers",
        "description": "Retrieve data centers by resource ID. This value is in the response body when the data center is created, and in the list of the data centers, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersFindById"
      },
      "put": {
        "tags": [
          "Data centers"
        ],
        "summary": "Modify data centers",
        "description": "Modify the properties of the specified data center, rename it, or change the description.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "datacenter",
            "description": "The modified data center.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datacenter"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersPut"
      },
      "delete": {
        "tags": [
          "Data centers"
        ],
        "summary": "Delete data centers",
        "description": "Delete the specified data center and all the elements it contains. This method is destructive and should be used carefully.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersDelete"
      },
      "patch": {
        "tags": [
          "Data centers"
        ],
        "summary": "Partially modify data centers",
        "description": "Update the properties of the specified data center, rename it, or change the description.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "datacenter",
            "description": "The properties of the data center to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatacenterProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Datacenter"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersPatch"
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "List locations",
        "description": "List the available locations for provisioning your virtual data centers.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Locations"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "locationsGet"
      }
    },
    "/locations/{regionId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "List locations within regions",
        "description": "List locations by the region ID.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The unique ID of the region.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Locations"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "locationsFindByRegionId"
      }
    },
    "/locations/{regionId}/{locationId}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Retrieve specified locations",
        "description": "Retrieve the properties of the specified location",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "description": "The unique ID of the region.",
            "required": true,
            "type": "string"
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "The unique ID of the location.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Location"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "locationsFindByRegionIdAndId"
      }
    },
    "/datacenters/{datacenterId}/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "List servers ",
        "description": "List all servers within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "name": "upgradeNeeded",
            "in": "query",
            "description": "Filter servers that can or that cannot be upgraded.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Servers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersGet"
      },
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Create servers",
        "description": "Create a server within the specified data center. You can also use this request to configure the boot volumes and connect to existing LANs at the same time.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "The server to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Retrieve servers by ID",
        "description": "Retrieve information about the specified server within the data center, such as its configuration, provisioning status, and so on.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersFindById"
      },
      "put": {
        "tags": [
          "Servers"
        ],
        "summary": "Modify servers",
        "description": "Modify the properties of the specified server within the data center.\n\nStarting with v5, the 'allowReboot' attribute is retired; while previously required for changing certain server properties, this behavior is now implicit, and the backend will perform this automatically. For example, in earlier versions, when the CPU family is changed, 'allowReboot' had to be set to 'true'; this is no longer required, the reboot will be performed automatically.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "The modified server",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersPut"
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Delete servers",
        "description": "Delete the specified server in your data center. The attached storage volumes will not be removed — a separate API call must be made for these actions.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersDelete"
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "summary": "Partially modify servers",
        "description": "Update the properties of the specified server within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "server",
            "description": "The properties of the server to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Server"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersPatch"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/volumes": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "List attached volumes",
        "description": "List all volumes, attached to the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AttachedVolumes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersVolumesGet"
      },
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Attach volumes",
        "description": "Attach an existing storage volume to the specified server.\n\nA volume scan also be created and attached in one step by providing the new volume description as payload.\n\nThe combined total of attached volumes and NICs cannot exceed 24 per server.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "volume",
            "description": "The volume to be attached (or created and attached).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersVolumesPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/volumes/{volumeId}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Retrieve attached volumes",
        "description": "Retrieve the properties of the volume, attached to the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersVolumesFindById"
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Detach volumes",
        "description": "Detach the specified volume from the server without deleting it from the data center. A separate request must be made to perform the deletion.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersVolumesDelete"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/cdroms": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "List attached CD-ROMs ",
        "description": "List all CD-ROMs, attached to the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Cdroms"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersCdromsGet"
      },
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Attach CD-ROMs",
        "description": "Attach a CD-ROM to an existing server. Up to two CD-ROMs can be attached to the same server. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "cdrom",
            "description": "The CD-ROM to be attached.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersCdromsPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/cdroms/{cdromId}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Retrieve attached CD-ROMs",
        "description": "Retrieve the properties of the CD-ROM, attached to the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cdromId",
            "in": "path",
            "description": "The unique ID of the CD-ROM.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersCdromsFindById"
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "summary": "Detach CD-ROMs",
        "description": "Detach the specified CD-ROM from the server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cdromId",
            "in": "path",
            "description": "The unique ID of the CD-ROM.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersCdromsDelete"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/reboot": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Reboot servers",
        "description": "Force a hard reboot of the specified server within the data center. Don't use this method if you wish to reboot gracefully. This is an equivalent of powering down a computer and turning it back on.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersRebootPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/start": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Start servers",
        "description": "Start the specified server within the data center; if the server's public IP address has been deallocated, a new IP address will be assigned.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersStartPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/stop": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Stop VMs",
        "description": "Stop the specified server within the data center: the VM will be forcefully shut down, the billing will cease, and any allocated public IPs will be deallocated.\n\nThis operation is not supported for the Cubes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersStopPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/suspend": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Suspend Cubes instances",
        "description": "Suspend the specified Cubes instance within the data center. The instance will not be deleted, and allocated resources will continue to be billed.\n\nThis operation is only supported for the Cubes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersSuspendPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/resume": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Resume Cubes instances",
        "description": "Resume a suspended Cube instance; no billing event will be generated.\n\nThis operation is only supported for the Cubes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersResumePost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/upgrade": {
      "post": {
        "tags": [
          "Servers"
        ],
        "summary": "Upgrade servers",
        "description": "Upgrade the server version, if needed. To determine if an upgrade is available, execute  the following call:\n\n'/datacenters/{datacenterId}/servers?upgradeNeeded=true'",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersUpgradePost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/token": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get JASON Web Token",
        "description": "Retrieve a JSON Web Token from the server for use in login operations (such as accessing the server's console).",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersTokenGet"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/remoteconsole": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Get Remote Console link",
        "description": "Retrieve a link with a JSON Web Token for accessing the server's Remote Console.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RemoteConsoleUrl"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersRemoteConsoleGet"
      }
    },
    "/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "List images",
        "description": "List all the images within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Images"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "imagesGet"
      }
    },
    "/images/{imageId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Retrieve images",
        "description": "Retrieve the properties of the specified image.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The unique ID of the image.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "imagesFindById"
      },
      "put": {
        "tags": [
          "Images"
        ],
        "summary": "Modify images",
        "description": "Modify the properties of the specified image.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The unique ID of the image.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "image",
            "description": "The modified image",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "imagesPut"
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete images",
        "description": "Delete the specified image; this operation is only supported for private images.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The unique ID of the image.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "imagesDelete"
      },
      "patch": {
        "tags": [
          "Images"
        ],
        "summary": "Partially modify images",
        "description": "Update the properties of the specified image.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The unique ID of the image.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "image",
            "description": "The image properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "imagesPatch"
      }
    },
    "/datacenters/{datacenterId}/volumes": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "List volumes",
        "description": "List all the volumes within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volumes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesGet"
      },
      "post": {
        "tags": [
          "Volumes"
        ],
        "summary": "Create volumes",
        "description": "Create a storage volume within the specified data center. The volume will not be attached! Attaching volumes is described in the Servers section.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "volume",
            "description": "The volume to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesPost"
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "summary": "Retrieve volumes",
        "description": "Retrieve the properties of the specified volume within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesFindById"
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "summary": "Modify volumes",
        "description": "Modify the properties of the specified volume within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "volume",
            "description": "The modified volume",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesPut"
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "summary": "Delete volumes",
        "description": "Delete the specified volume within the data center. Use with caution, the volume will be permanently removed!",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesDelete"
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "summary": "Partially modify volumes",
        "description": "Update the properties of the specified storage volume within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "volume",
            "description": "The properties of the volume to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesPatch"
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/restore-snapshot": {
      "post": {
        "tags": [
          "Volumes"
        ],
        "summary": "Restore volume snapshots",
        "description": "Restore a snapshot for the specified volume within the data center. A snapshot is an image of a volume, which can be used to restore this volume at a later time.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "snapshotId",
            "in": "formData",
            "description": "The unique ID of the snapshot.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesRestore-snapshotPost"
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/create-snapshot": {
      "post": {
        "tags": [
          "Volumes"
        ],
        "summary": "Create volume snapshots",
        "description": "Create a snapshot of the specified volume within the data center; this snapshot can later be used to restore this volume.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Snapshot name",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Snapshot description",
            "required": false,
            "type": "string"
          },
          {
            "name": "secAuthProtection",
            "in": "formData",
            "description": "Flag for enabling extra protection for this snapshot, such as two-step verification.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "licenceType",
            "in": "formData",
            "description": "The OS type for this snapshot.",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "WINDOWS",
              "WINDOWS2016",
              "WINDOWS2022",
              "LINUX",
              "OTHER"
            ]
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesCreate-snapshotPost"
      }
    },
    "/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "List snapshots",
        "description": "List all available snapshots.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshots"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsGet"
      }
    },
    "/snapshots/{snapshotId}": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Retrieve snapshots by ID",
        "description": "Retrieve the properties of the specified snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsFindById"
      },
      "put": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Modify snapshots",
        "description": "Modify the properties of the specified snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "snapshot",
            "description": "The modified snapshot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Snapshot"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsPut"
      },
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Delete snapshots",
        "description": "Deletes the specified snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsDelete"
      },
      "patch": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Partially modify snapshots",
        "description": "Update the properties of the specified snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "snapshot",
            "description": "The properties of the snapshot to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Snapshot"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsPatch"
      }
    },
    "/ipblocks": {
      "get": {
        "tags": [
          "IP blocks"
        ],
        "summary": "List IP blocks ",
        "description": "List all reserved IP blocks.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limitDefault100"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlocks"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksGet"
      },
      "post": {
        "tags": [
          "IP blocks"
        ],
        "summary": "Reserve IP blocks",
        "description": "Reserve a new IP block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ipblock",
            "description": "The IP block to be reserved.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlock"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksPost"
      }
    },
    "/ipblocks/{ipblockId}": {
      "get": {
        "tags": [
          "IP blocks"
        ],
        "summary": "Retrieve IP blocks",
        "description": "Retrieve the properties of the specified IP block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksFindById"
      },
      "put": {
        "tags": [
          "IP blocks"
        ],
        "summary": "Modify IP blocks",
        "description": "Modify the properties of the specified IP block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ipblock",
            "description": "The modified IP block.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlock"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksPut"
      },
      "delete": {
        "tags": [
          "IP blocks"
        ],
        "summary": "Delete IP blocks",
        "description": "Remove the specified IP block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksDelete"
      },
      "patch": {
        "tags": [
          "IP blocks"
        ],
        "summary": "Partially modify IP blocks",
        "description": "Update the properties of the specified IP block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ipblock",
            "description": "The properties of the IP block to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpBlockProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IpBlock"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksPatch"
      }
    },
    "/datacenters/{datacenterId}/lans": {
      "get": {
        "tags": [
          "LANs"
        ],
        "summary": "List LANs",
        "description": "List all LANs within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Lans"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansGet"
      },
      "post": {
        "tags": [
          "LANs"
        ],
        "summary": "Create LANs",
        "description": "Create a LAN within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "The LAN to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanPost"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LanPost"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansPost"
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}": {
      "get": {
        "tags": [
          "LANs"
        ],
        "summary": "Retrieve LANs",
        "description": "Retrieve the properties of the specified LAN within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansFindById"
      },
      "put": {
        "tags": [
          "LANs"
        ],
        "summary": "Modify LANs",
        "description": "Modify the properties of the specified LAN within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "The modified LAN",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lan"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansPut"
      },
      "delete": {
        "tags": [
          "LANs"
        ],
        "summary": "Delete LANs",
        "description": "Delete the specified LAN within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansDelete"
      },
      "patch": {
        "tags": [
          "LANs"
        ],
        "summary": "Partially modify LANs",
        "description": "Update the properties of the specified LAN within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lan",
            "description": "The properties of the LAN to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Lan"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansPatch"
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}/nics": {
      "get": {
        "tags": [
          "LANs"
        ],
        "summary": "List LAN members",
        "description": "List all NICs, attached to the specified LAN.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LanNics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansNicsGet"
      },
      "post": {
        "tags": [
          "LANs"
        ],
        "summary": "Attach NICs",
        "description": "Attach an existing NIC to the specified LAN.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "The NIC to be attached.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansNicsPost"
      }
    },
    "/datacenters/{datacenterId}/lans/{lanId}/nics/{nicId}": {
      "get": {
        "tags": [
          "LANs"
        ],
        "summary": "Retrieve attached NICs",
        "description": "Retrieve the properties of the NIC, attached to the specified LAN.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lanId",
            "in": "path",
            "description": "The unique ID of the LAN.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLansNicsFindById"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics": {
      "get": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "List NICs",
        "description": "List all NICs, attached to the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsGet"
      },
      "post": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "Create NICs",
        "description": "Add a NIC to the specified server. The combined total of NICs and attached volumes cannot exceed 24 per server.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "The NIC to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}": {
      "get": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "Retrieve NICs",
        "description": "Retrieve the properties of the specified NIC.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFindById"
      },
      "put": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "Modify NICs",
        "description": "Modify the properties of the specified NIC.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "The modified NIC",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NicPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsPut"
      },
      "delete": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "Delete NICs",
        "description": "Remove the specified NIC.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsDelete"
      },
      "patch": {
        "tags": [
          "Network interfaces"
        ],
        "summary": "Partially modify NICs",
        "description": "Update the properties of the specified NIC.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "The properties of the NIC to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NicProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsPatch"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules": {
      "get": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "List firewall rules",
        "description": "List all firewall rules for the specified NIC.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRules"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesGet"
      },
      "post": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "Create firewall rules",
        "description": "Create a firewall rule for the specified NIC.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "The firewall rule to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/firewallrules/{firewallruleId}": {
      "get": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "Retrieve firewall rules",
        "description": "Retrieve the properties of the specified firewall rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the firewall rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesFindById"
      },
      "put": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "Modify firewall rules",
        "description": "Modify the properties of the specified firewall rule.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the firewall rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "The modified firewall rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesPut"
      },
      "delete": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "Delete firewall rules",
        "description": "Delete the specified firewall rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the firewall rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesDelete"
      },
      "patch": {
        "tags": [
          "Firewall rules"
        ],
        "summary": "Partially modify firewall rules",
        "description": "Update the properties of the specified firewall rule.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "firewallruleId",
            "in": "path",
            "description": "The unique ID of the firewall rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "firewallrule",
            "description": "The properties of the firewall rule to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallruleProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFirewallrulesPatch"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/flowlogs": {
      "get": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "List Flow Logs",
        "description": "List all the Flow Logs for the specified NIC.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLogs"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsGet"
      },
      "post": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "Create Flow Logs",
        "description": "Add a new Flow Log for the specified NIC.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "flowlog",
            "description": "The Flow Log to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/nics/{nicId}/flowlogs/{flowlogId}": {
      "get": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "Retrieve Flow Logs",
        "description": "Retrieve the properties of the specified Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "flowlogId",
            "in": "path",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsFindById"
      },
      "put": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "Modify Flow Logs",
        "description": "Modify the specified Flow Log record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "flowlogId",
            "in": "path",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "flowlog",
            "description": "The modified Flow Log.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsPut"
      },
      "patch": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "Partially modify Flow Logs",
        "description": "Update the specified Flow Log record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "flowlogId",
            "in": "path",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "flowlog",
            "description": "The Flow Log record to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsPatch"
      },
      "delete": {
        "tags": [
          "Flow Logs"
        ],
        "summary": "Delete Flow Logs",
        "description": "Delete the specified Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "name": "flowlogId",
            "in": "path",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersNicsFlowlogsDelete"
      }
    },
    "/datacenters/{datacenterId}/loadbalancers": {
      "get": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "List Load Balancers",
        "description": "List all the Load Balancers within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersGet"
      },
      "post": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Create Load Balancers",
        "description": "Create a Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "loadbalancer",
            "description": "The Load Balancer to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersPost"
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}": {
      "get": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Retrieve Load Balancers",
        "description": "Retrieve the properties of the specified Load Balancer within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersFindById"
      },
      "put": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Modify Load Balancers",
        "description": "Modify the properties of the specified Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "loadbalancer",
            "description": "The modified Load Balancer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersPut"
      },
      "delete": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Delete Load Balancers",
        "description": "Remove the specified Load Balancer from the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersDelete"
      },
      "patch": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Partially modify Load Balancers",
        "description": "Update the properties of the specified Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "loadbalancer",
            "description": "The properties of the Load Balancer to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalancerProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Loadbalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersPatch"
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics": {
      "get": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "List balanced NICs",
        "description": "List all NICs, attached to the specified Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BalancedNics"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersBalancednicsGet"
      },
      "post": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Attach balanced NICs",
        "description": "Attach an existing NIC to the specified Load Balancer.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nic",
            "description": "The NIC to be attached.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Nic"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersBalancednicsPost"
      }
    },
    "/datacenters/{datacenterId}/loadbalancers/{loadbalancerId}/balancednics/{nicId}": {
      "get": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Retrieve balanced NICs",
        "description": "Retrieve the properties of the specified NIC, attached to the Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Nic"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersBalancednicsFindByNicId"
      },
      "delete": {
        "tags": [
          "Load Balancers"
        ],
        "summary": "Detach balanced NICs",
        "description": "Detach the specified NIC from the Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerId",
            "in": "path",
            "description": "The unique ID of the Load Balancer.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nicId",
            "in": "path",
            "description": "The unique ID of the NIC.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLoadbalancersBalancednicsDelete"
      }
    },
    "/datacenters/{datacenterId}/natgateways": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "List NAT Gateways",
        "description": "List all NAT Gateways within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGateways"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysGet"
      },
      "post": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Create NAT Gateways",
        "description": "Create a NAT Gateway within the data center.\n\nThis operation is restricted to contract owner, admin, and users with 'createInternetAccess' privileges.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "natGateway",
            "description": "The NAT Gateway to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGateway"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysPost"
      }
    },
    "/datacenters/{datacenterId}/natgateways/{natGatewayId}": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Retrieve NAT Gateways",
        "description": "Retrieve the properties of the specified NAT Gateway within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "natGatewayId",
            "in": "path",
            "description": "The unique ID of the NAT Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFindByNatGatewayId"
      },
      "put": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Modify NAT Gateways",
        "description": "Modify the properties of the specified NAT Gateway within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "in": "body",
            "name": "natGateway",
            "description": "The modified NAT Gateway.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGatewayPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysPut"
      },
      "patch": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Partially modify NAT Gateways",
        "description": "Update the properties of the specified NAT Gateway within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "natGatewayProperties",
            "description": "The properties of the NAT Gateway to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGatewayProperties"
            }
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGateway"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysPatch"
      },
      "delete": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Delete NAT Gateways",
        "description": "Remove the specified NAT Gateway from the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysDelete"
      }
    },
    "/datacenters/{datacenterId}/natgateways/{natGatewayId}/rules": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "List NAT Gateway rules",
        "description": "List all rules for the specified NAT Gateway.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "natGatewayId",
            "description": "The unique ID of the NAT Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGatewayRules"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesGet"
      },
      "post": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Create NAT Gateway rules",
        "description": "Create a rule for the specified NAT Gateway.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "natGatewayId",
            "description": "The unique ID of the NAT Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "natGatewayRule",
            "description": "The NAT Gateway rule to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGatewayRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGatewayRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesPost"
      }
    },
    "/datacenters/{datacenterId}/natgateways/{natGatewayId}/rules/{natGatewayRuleId}": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Retrieve NAT Gateway rules",
        "description": "Retrieve the properties of the specified NAT Gateway rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "natGatewayId",
            "in": "path",
            "description": "The unique ID of the NAT Gateway.",
            "required": true,
            "type": "string"
          },
          {
            "name": "natGatewayRuleId",
            "in": "path",
            "description": "The unique ID of the NAT Gateway rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGatewayRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesFindByNatGatewayRuleId"
      },
      "put": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Modify NAT Gateway rules",
        "description": "Modify the specified NAT Gateway rule.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "in": "path",
            "name": "natGatewayRuleId",
            "description": "The unique ID of the NAT Gateway rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "natGatewayRule",
            "description": "The modified NAT Gateway rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGatewayRulePut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGatewayRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesPut"
      },
      "patch": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Partially modify NAT Gateway rules",
        "description": "Update the properties of the specified NAT Gateway rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "in": "path",
            "name": "natGatewayRuleId",
            "description": "The unique ID of the NAT Gateway rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "natGatewayRuleProperties",
            "description": "The properties of the NAT Gateway rule to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NatGatewayRuleProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NatGatewayRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesPatch"
      },
      "delete": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Delete NAT Gateway rules",
        "description": "Delete the specified NAT Gateway rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "in": "path",
            "name": "natGatewayRuleId",
            "description": "The unique ID of the NAT Gateway rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysRulesDelete"
      }
    },
    "/datacenters/{datacenterId}/natgateways/{natGatewayId}/flowlogs": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "List NAT Gateway Flow Logs",
        "description": "List all the Flow Logs for the specified NAT Gateway.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLogs"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsGet"
      },
      "post": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Create NAT Gateway Flow Logs",
        "description": "Add a new Flow Log for the specified NAT Gateway.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "in": "body",
            "name": "natGatewayFlowLog",
            "description": "The Flow Log to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsPost"
      }
    },
    "/datacenters/{datacenterId}/natgateways/{natGatewayId}/flowlogs/{flowLogId}": {
      "get": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Retrieve NAT Gateway Flow Logs",
        "description": "Retrieve the specified NAT Gateway Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/flowLogId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsFindByFlowLogId"
      },
      "put": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Modify NAT Gateway Flow Logs",
        "description": "Modify the specified NAT Gateway Flow Log.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/flowLogId"
          },
          {
            "in": "body",
            "name": "natGatewayFlowLog",
            "description": "The modified NAT Gateway Flow Log.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsPut"
      },
      "patch": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Partially modify NAT Gateway Flow Logs",
        "description": "Update the properties of the specified NAT Gateway Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/flowLogId"
          },
          {
            "in": "body",
            "name": "natGatewayFlowLogProperties",
            "description": "The properties of the Flow Log to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsPatch"
      },
      "delete": {
        "tags": [
          "NAT Gateways"
        ],
        "summary": "Delete NAT Gateway Flow Logs",
        "description": "Delete the specified NAT Gateway Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/natGatewayId"
          },
          {
            "$ref": "#/parameters/flowLogId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNatgatewaysFlowlogsDelete"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "List Network Load Balancers",
        "description": "List all the Network Load Balancers within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersGet"
      },
      "post": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Create Network Load Balancers",
        "description": "Create a Network Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancer",
            "description": "The Network Load Balancer to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersPost"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers/{networkLoadBalancerId}": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Retrieve Network Load Balancers",
        "description": "Retrieve the properties of the specified Network Load Balancer within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFindByNetworkLoadBalancerId"
      },
      "put": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Modify Network Load Balancers",
        "description": "Modify the properties of the specified Network Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "body",
            "name": "networkLoadBalancer",
            "description": "The modified Network Load Balancer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersPut"
      },
      "patch": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Partially modify Network Load Balancers",
        "description": "Update the properties of the specified Network Load Balancer within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerProperties",
            "description": "The properties of the Network Load Balancer to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerProperties"
            }
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersPatch"
      },
      "delete": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Delete Network Load Balancers",
        "description": "Remove the specified Network Load Balancer from the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersDelete"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers/{networkLoadBalancerId}/flowlogs": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "List NLB Flow Logs",
        "description": "List all the Flow Logs for the specified Network Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLogs"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsGet"
      },
      "post": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Create NLB Flow Logs",
        "description": "Add a new Flow Log for the Network Load Balancer.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerFlowLog",
            "description": "The Flow Log to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsPost"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers/{networkLoadBalancerId}/flowlogs/{flowLogId}": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Retrieve NLB Flow Logs",
        "description": "Retrieve the specified Network Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsFindByFlowLogId"
      },
      "put": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Modify NLB Flow Logs",
        "description": "Modify the specified Network Load Balancer Flow Log.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerFlowLog",
            "description": "The modified NLB Flow Log.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsPut"
      },
      "patch": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Partially modify NLB Flow Logs",
        "description": "Update the properties of the specified Network Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerFlowLogProperties",
            "description": "The properties of the Flow Log to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsPatch"
      },
      "delete": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Delete NLB Flow Logs",
        "description": "Delete the specified Network Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersFlowlogsDelete"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers/{networkLoadBalancerId}/forwardingrules": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "List NLB forwarding rules",
        "description": "List the forwarding rules for the specified Network Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRules"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesGet"
      },
      "post": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Create NLB forwarding rules",
        "description": "Create a forwarding rule for the specified Network Load Balancer.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerForwardingRule",
            "description": "The forwarding rule to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesPost"
      }
    },
    "/datacenters/{datacenterId}/networkloadbalancers/{networkLoadBalancerId}/forwardingrules/{forwardingRuleId}": {
      "get": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Retrieve NLB forwarding rules",
        "description": "Retrieve the specified Network Load Balance forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesFindByForwardingRuleId"
      },
      "put": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Modify NLB forwarding rules",
        "description": "Modify the specified Network Load Balancer forwarding rule.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerForwardingRule",
            "description": "The modified NLB forwarding rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRulePut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesPut"
      },
      "patch": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Partially modify NLB forwarding rules",
        "description": "Update the properties of the specified Network Load Balancer forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "networkLoadBalancerForwardingRuleProperties",
            "description": "The properties of the forwarding rule to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesPatch"
      },
      "delete": {
        "tags": [
          "Network Load Balancers"
        ],
        "summary": "Delete NLB forwarding rules",
        "description": "Delete the specified Network Load Balancer forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/networkLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersNetworkloadbalancersForwardingrulesDelete"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "List Application Load Balancers",
        "description": "List all Application Load Balancers within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersGet"
      },
      "post": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Create Application Load Balancers",
        "description": "Create an Application Load Balancer within the datacenter.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancer",
            "description": "The Application Load Balancer to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancer"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancer"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersPost"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers/{applicationLoadBalancerId}": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Retrieve Application Load Balancers",
        "description": "Retrieve the properties of the specified Application Load Balancer within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFindByApplicationLoadBalancerId"
      },
      "put": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Modify Application Load Balancers",
        "description": "Modify the properties of the specified Application Load Balancer within the data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancer",
            "description": "The modified Application Load Balancer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersPut"
      },
      "patch": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Partially modify Application Load Balancers",
        "description": "Update the properties of the specified Application Load Balancer within the data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerProperties",
            "description": "The Application Load Balancer properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerProperties"
            }
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancer"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersPatch"
      },
      "delete": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Delete Application Load Balancers",
        "description": "Remove the specified Application Load Balancer from the data center..",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersDelete"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers/{applicationLoadBalancerId}/forwardingrules": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "List ALB forwarding rules",
        "description": "List the forwarding rules for the specified Application Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRules"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesGet"
      },
      "post": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Create ALB forwarding rules",
        "description": "Create a forwarding rule for the Application Load Balancer.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerForwardingRule",
            "description": "The forwarding rule to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesPost"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers/{applicationLoadBalancerId}/forwardingrules/{forwardingRuleId}": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Retrieve ALB forwarding rules",
        "description": "Retrieve the specified Application Load Balancer forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId"
      },
      "put": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Modify ALB forwarding rules",
        "description": "Modify the specified Application Load Balancer forwarding rule.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerForwardingRule",
            "description": "The modified ALB forwarding rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRulePut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesPut"
      },
      "patch": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Partially modify ALB forwarding rules",
        "description": "Update the properties of the specified Application Load Balancer forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerForwardingRuleProperties",
            "description": "The properties of the forwarding rule to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRuleProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesPatch"
      },
      "delete": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Delete ALB forwarding rules",
        "description": "Delete the specified Application Load Balancer forwarding rule.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "forwardingRuleId",
            "description": "The unique ID of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersForwardingrulesDelete"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers/{applicationLoadBalancerId}/flowlogs": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "List ALB Flow Logs",
        "description": "List the Flow Logs for the specified Application Load Balancer.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLogs"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsGet"
      },
      "post": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Create ALB Flow Logs",
        "description": "Add a new Flow Log for the Application Load Balancer.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerFlowLog",
            "description": "The Flow Log to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLog"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsPost"
      }
    },
    "/datacenters/{datacenterId}/applicationloadbalancers/{applicationLoadBalancerId}/flowlogs/{flowLogId}": {
      "get": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Retrieve ALB Flow Logs",
        "description": "Retrieve the specified Application Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsFindByFlowLogId"
      },
      "put": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Modify ALB Flow Logs",
        "description": "Modify the specified Application Load Balancer Flow Log.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerFlowLog",
            "description": "The modified ALB Flow Log.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsPut"
      },
      "patch": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Partially modify ALB Flow Logs",
        "description": "Update the properties of the specified Application Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationLoadBalancerFlowLogProperties",
            "description": "The properties of the ALB Flow Log to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FlowLog"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsPatch"
      },
      "delete": {
        "tags": [
          "Application Load Balancers"
        ],
        "summary": "Delete ALB Flow Logs",
        "description": "Delete the specified Application Load Balancer Flow Log.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "datacenterId",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/applicationLoadBalancerId"
          },
          {
            "in": "path",
            "name": "flowLogId",
            "description": "The unique ID of the Flow Log.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersApplicationloadbalancersFlowlogsDelete"
      }
    },
    "/targetgroups": {
      "get": {
        "tags": [
          "Target groups"
        ],
        "summary": "List target groups",
        "description": "List all target groups.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limitDefault100MaxLimit200"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TargetGroups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetgroupsGet"
      },
      "post": {
        "tags": [
          "Target groups"
        ],
        "summary": "Create target groups",
        "description": "Create a target group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "targetGroup",
            "description": "The target group to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroup"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TargetGroup"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetgroupsPost"
      }
    },
    "/targetgroups/{targetGroupId}": {
      "get": {
        "tags": [
          "Target groups"
        ],
        "summary": "Retrieve target groups",
        "description": "Retrieve the properties of the specified target group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/targetGroupId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TargetGroup"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetgroupsFindByTargetGroupId"
      },
      "put": {
        "tags": [
          "Target groups"
        ],
        "summary": "Modify target groups",
        "description": "Modify the properties of the specified target group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/targetGroupId"
          },
          {
            "in": "body",
            "name": "targetGroup",
            "description": "The modified target group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TargetGroup"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetgroupsPut"
      },
      "patch": {
        "tags": [
          "Target groups"
        ],
        "summary": "Partially modify target groups",
        "description": "Update the properties of the specified target group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "targetGroupProperties",
            "description": "The target group properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetGroupProperties"
            }
          },
          {
            "$ref": "#/parameters/targetGroupId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TargetGroup"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetgroupsPatch"
      },
      "delete": {
        "tags": [
          "Target groups"
        ],
        "summary": "Remove target groups",
        "description": "Remove the specified target group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/targetGroupId"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "targetGroupsDelete"
      }
    },
    "/requests/{requestId}": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Retrieve requests",
        "description": "Retrieve the properties of the specified request.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The unique ID of the request.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Request"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "requestsFindById"
      }
    },
    "/requests": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "List requests",
        "description": "List all API requests.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "name": "filter.status",
            "in": "query",
            "description": "Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdAfter",
            "in": "query",
            "description": "Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdBefore",
            "in": "query",
            "description": "Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdDate",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.createdBy",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.etag",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.requestStatus",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.method",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.headers",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.body",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.url",
            "in": "query",
            "description": "Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero. ",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Requests"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "requestsGet"
      }
    },
    "/requests/{requestId}/status": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Retrieve request status",
        "description": "Retrieve the status of the specified request.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The unique ID of the request.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RequestStatus"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "requestsStatusGet"
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contract resources"
        ],
        "summary": "Retrieve contracts",
        "description": "Retrieve the properties of the user's contract. In this version, the resource became a collection.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Contracts"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "contractsGet"
      }
    },
    "/um/users": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List all users ",
        "description": "List all the users in your account.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limitUser"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersGet"
      },
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Create users",
        "description": "Create a user.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPost"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersPost"
      }
    },
    "/um/users/{userId}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve users",
        "description": "Retrieve user properties by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersFindById"
      },
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Modify users",
        "description": "Modify the properties of the specified user.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "The modified user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersPut"
      },
      "delete": {
        "tags": [
          "User management"
        ],
        "summary": "Delete users",
        "description": "Delete the specified user.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersDelete"
      }
    },
    "/um/users/{userId}/groups": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve group resources by user ID",
        "description": "Retrieve group resources of the user by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceGroups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersGroupsGet"
      }
    },
    "/um/users/{userId}/owns": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve user resources by user ID",
        "description": "Retrieve own resources of the user by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcesUsers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersOwnsGet"
      }
    },
    "/um/groups": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List all groups",
        "description": "List all the available user groups.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Groups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsGet"
      },
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Create groups",
        "description": "Create a group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "group",
            "description": "The group to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsPost"
      }
    },
    "/um/groups/{groupId}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve groups",
        "description": "Retrieve a group by the group ID. This value is in the response body when the group is created, and in the list of the groups, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsFindById"
      },
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Modify groups",
        "description": "Modify the properties of the specified group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "group",
            "description": "The modified group.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Group"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsPut"
      },
      "delete": {
        "tags": [
          "User management"
        ],
        "summary": "Delete groups",
        "description": "Remove the specified group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsDelete"
      }
    },
    "/um/groups/{groupId}/resources": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve group resources",
        "description": "List the resources assigned to the group, by group ID.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceGroups"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsResourcesGet"
      }
    },
    "/um/groups/{groupId}/users": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List group members",
        "description": "List all members of the specified user group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GroupMembers"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsUsersGet"
      },
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Add group members",
        "description": "Add an existing user to the specified group. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "The user to add.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsUsersPost"
      }
    },
    "/um/groups/{groupId}/users/{userId}": {
      "delete": {
        "tags": [
          "User management"
        ],
        "summary": "Remove users from groups",
        "description": "Remove the specified user from the group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsUsersDelete"
      }
    },
    "/um/groups/{groupId}/shares/{resourceId}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve group shares",
        "description": "Retrieve the properties of the specified group share.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The unique ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsSharesFindByResourceId"
      },
      "post": {
        "tags": [
          "User management"
        ],
        "summary": "Add group shares",
        "description": "Add the specified share to the group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The unique ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "The resource to add.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupShare"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsSharesPost"
      },
      "put": {
        "tags": [
          "User management"
        ],
        "summary": "Modify group share privileges",
        "description": "Modify share permissions for the specified group. With an empty body, no updates are performed, and the current share permissions for the group are returned with response code 200.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The unique ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "The modified resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupShare"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShare"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsSharesPut"
      },
      "delete": {
        "tags": [
          "User management"
        ],
        "summary": "Remove group shares",
        "description": "Remove the specified share from the group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The unique ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsSharesDelete"
      }
    },
    "/um/groups/{groupId}/shares": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List group shares ",
        "description": "List all shares and share privileges for the specified group.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The unique ID of the group.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GroupShares"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umGroupsSharesGet"
      }
    },
    "/um/resources": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List all resources",
        "description": "List all the available resources.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Resources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umResourcesGet"
      }
    },
    "/um/resources/{resourceType}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "List resources by type",
        "description": "List all resources of the specified type.\n\nResource types are: {datacenter, snapshot, image, ipblock, pcc, backupunit, k8s}\n\nResource types are in the list of resources, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Resources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umResourcesFindByType"
      }
    },
    "/um/resources/{resourceType}/{resourceId}": {
      "get": {
        "tags": [
          "User management"
        ],
        "summary": "Retrieve resources by type",
        "description": "Retrieve a resource by the resource type and resource ID.\n\nResource types are: {datacenter, snapshot, image, ipblock, pcc, backupunit, k8s}\n\nResource types are in the list of resources, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "The resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The resource ID",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Resource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umResourcesFindByTypeAndId"
      }
    },
    "/um/users/{userId}/s3keys": {
      "get": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "List user S3 keys",
        "description": "List S3 keys by user ID. The user ID is in the response body when the user is created, and in the list of the users, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/S3Keys"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3keysGet"
      },
      "post": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "Create user S3 keys",
        "description": "Create an S3 key for the specified user. The user ID is in the response body when the user is created, and in the list of the users, returned by GET. A maximum of five keys per user can be generated.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3keysPost"
      }
    },
    "/um/users/{userId}/s3keys/{keyId}": {
      "get": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "Retrieve user S3 keys by key ID",
        "description": "Retrieve the specified user S3 key. The user ID is in the response body when the user is created, and in the list of the users, returned by GET. The key ID is in the response body when the S3 key is created, and in the list of all user S3 keys, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique ID of the S3 key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3keysFindByKeyId"
      },
      "put": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "Modify S3 keys by key ID",
        "description": "Enable or disable the specified user S3 key.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique ID of the S3 key.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "s3Key",
            "description": "The modified S3 key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/S3Key"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/S3Key"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3keysPut"
      },
      "delete": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "Delete S3 keys",
        "description": "Delete the specified user S3 key.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyId",
            "in": "path",
            "description": "The unique ID of the S3 key.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3keysDelete"
      }
    },
    "/um/users/{userId}/s3ssourl": {
      "get": {
        "tags": [
          "User S3 keys"
        ],
        "summary": "Retrieve S3 single sign-on URLs",
        "description": "Retrieve S3 Object Storage single sign-on URLs for the the specified user. The user ID is in the response body when the user is created, and in the list of the users, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique ID of the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/S3ObjectStorageSSO"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "umUsersS3ssourlGet"
      }
    },
    "/backupunits": {
      "get": {
        "tags": [
          "Backup units"
        ],
        "summary": "List backup units",
        "description": "List all available backup units.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnits"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsGet"
      },
      "post": {
        "tags": [
          "Backup units"
        ],
        "summary": "Create backup units",
        "description": "Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management. ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "backupUnit",
            "description": "The backup unit to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsPost"
      }
    },
    "/backupunits/{backupunitId}": {
      "get": {
        "tags": [
          "Backup units"
        ],
        "summary": "Retrieve backup units",
        "description": "Retrieve the properties of the specified backup unit.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsFindById"
      },
      "put": {
        "tags": [
          "Backup units"
        ],
        "summary": "Modify backup units",
        "description": "Modify the properties of the specified backup unit.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "backupUnit",
            "description": "The modified backup unit.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsPut"
      },
      "patch": {
        "tags": [
          "Backup units"
        ],
        "summary": "Partially modify backup units",
        "description": "Update the properties of the specified backup unit.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "backupUnit",
            "description": "The properties of the backup unit to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupUnitProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnit"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsPatch"
      },
      "delete": {
        "tags": [
          "Backup units"
        ],
        "summary": "Delete backup units",
        "description": "Remove the specified backup unit.\n\nThis process will delete:\n1) The backup plans inside the backup unit\n2) All backups, associated with this backup unit\n3) The backup user\n4) The backup unit itself",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsDelete"
      }
    },
    "/backupunits/{backupunitId}/ssourl": {
      "get": {
        "tags": [
          "Backup units"
        ],
        "summary": "Retrieve BU single sign-on URLs",
        "description": "Retrieve a single sign-on URL for the specified backup unit.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "backupunitId",
            "in": "path",
            "description": "The unique ID of the backup unit.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BackupUnitSSO"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "backupunitsSsourlGet"
      }
    },
    "/k8s": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes clusters",
        "description": "List all available Kubernetes clusters.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesClusters"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sGet"
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Create Kubernetes clusters",
        "description": "Create a Kubernetes cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "kubernetesCluster",
            "description": "The Kubernetes cluster to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterForPost"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sPost"
      }
    },
    "/k8s/{k8sClusterId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes clusters",
        "description": "Retrieve the specified Kubernetes cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sFindByClusterId"
      },
      "put": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Modify Kubernetes clusters",
        "description": "Modify the specified Kubernetes cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "kubernetesCluster",
            "description": "The modified Kubernetes cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterForPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sPut"
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes clusters",
        "description": "Delete the specified Kubernetes cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sDelete"
      }
    },
    "/k8s/{k8sClusterId}/kubeconfig": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes configuration files",
        "description": "Retrieve a configuration file for the specified Kubernetes cluster, in YAML or JSON format as defined in the Accept header; the default Accept header is application/yaml.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/yaml",
          "application/x-yaml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sKubeconfigGet"
      }
    },
    "/k8s/{k8sClusterId}/nodepools": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes node pools",
        "description": "List all Kubernetes node pools, included the specified Kubernetes cluster.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePools"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsGet"
      },
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Create Kubernetes node pools",
        "description": "Create a Kubernetes node pool inside the specified Kubernetes cluster.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "KubernetesNodePool",
            "description": "The Kubernetes node pool to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesNodePoolForPost"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsPost"
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes node pools",
        "description": "Retrieve the specified Kubernetes node pool.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsFindById"
      },
      "put": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Modify Kubernetes node pools",
        "description": "Modify the specified Kubernetes node pool.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "KubernetesNodePool",
            "description": "Details of the Kubernetes Node Pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesNodePoolForPut"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodePool"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsPut"
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes node pools",
        "description": "Delete the specified Kubernetes node pool.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsDelete"
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes nodes",
        "description": "List all the nodes, included in the specified Kubernetes node pool.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNodes"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsNodesGet"
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve Kubernetes nodes",
        "description": "Retrieve the specified Kubernetes node.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KubernetesNode"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsNodesFindById"
      },
      "delete": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Delete Kubernetes nodes",
        "description": "Delete the specified Kubernetes node.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsNodesDelete"
      }
    },
    "/k8s/{k8sClusterId}/nodepools/{nodepoolId}/nodes/{nodeId}/replace": {
      "post": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Recreate Kubernetes nodes",
        "description": "Recreate the specified Kubernetes node.\n\nA new node is created and configured by Managed Kubernetes, based on the node pool template. Once the status is  \"Active\", all the pods are migrated from the faulty node, which is then deleted once empty. During this operation, the node pool will have an additional billable  \"Active\" node.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "k8sClusterId",
            "in": "path",
            "description": "The unique ID of the Kubernetes cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodepoolId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node pool.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "description": "The unique ID of the Kubernetes node.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sNodepoolsNodesReplacePost"
      }
    },
    "/k8s/versions": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "List Kubernetes versions",
        "description": "List available Kubernetes versions.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiErrorK8sVersion"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sVersionsGet"
      }
    },
    "/k8s/versions/default": {
      "get": {
        "tags": [
          "Kubernetes"
        ],
        "summary": "Retrieve current default Kubernetes version",
        "description": "Retrieve current default Kubernetes version for clusters and nodepools.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiErrorK8sVersion"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "k8sVersionsDefaultGet"
      }
    },
    "/pccs": {
      "get": {
        "tags": [
          "Private Cross-Connects"
        ],
        "summary": "List private Cross-Connects",
        "description": "List all private Cross-Connects for your account.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnects"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "pccsGet"
      },
      "post": {
        "tags": [
          "Private Cross-Connects"
        ],
        "summary": "Create private Cross-Connects",
        "description": "Create a private Cross-Connect.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pcc",
            "description": "The private Cross-Connect to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "pccsPost"
      }
    },
    "/pccs/{pccId}": {
      "get": {
        "tags": [
          "Private Cross-Connects"
        ],
        "summary": "Retrieve private Cross-Connects",
        "description": "Retrieve a private Cross-Connect by the resource ID. Cross-Connect ID is in the response body when the private Cross-Connect is created, and in the list of private Cross-Connects, returned by GET.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private Cross-Connect.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "pccsFindById"
      },
      "delete": {
        "tags": [
          "Private Cross-Connects"
        ],
        "summary": "Delete private Cross-Connects",
        "description": "Remove the specified private Cross-Connect (only if not connected to any data centers).",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private Cross-Connect.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "pccsDelete"
      },
      "patch": {
        "tags": [
          "Private Cross-Connects"
        ],
        "summary": "Partially modify private Cross-Connects",
        "description": "Update the properties of the specified private Cross-Connect.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pccId",
            "in": "path",
            "description": "The unique ID of the private Cross-Connect.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pcc",
            "description": "The properties of the private Cross-Connect to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnectProperties"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCrossConnect"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "Callback URL to poll async operation status.",
                "pattern": "https://[apiBaseUri]/requests/[requestId]/status"
              },
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "pccsPatch"
      }
    },
    "/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List labels ",
        "description": "List all available labels.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Labels"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "labelsGet"
      }
    },
    "/labels/{labelurn}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve labels by URN",
        "description": "Retrieve a label by label URN.\n\nThe URN is unique for each label, and consists of:\n\nurn:label:<resource_type>:<resource_uuid>:<key>",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "labelurn",
            "in": "path",
            "description": "The label URN; URN is unique for each label, and consists of:\n\nurn:label:<resource_type>:<resource_uuid>:<key><key>",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/label"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "labelsFindByUrn"
      }
    },
    "/datacenters/{datacenterId}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List data center labels",
        "description": "List all the the labels for the specified data center.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLabelsGet"
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create data center labels",
        "description": "Add a new label to the specified data center.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The label to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLabelsPost"
      }
    },
    "/datacenters/{datacenterId}/labels/{key}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve data center labels",
        "description": "Retrieve the properties of the specified data center label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLabelsFindByKey"
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Modify data center labels",
        "description": "Modify the specified data center label.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The modified label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLabelsPut"
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete data center labels",
        "description": "Delete the specified data center label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersLabelsDelete"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List server labels",
        "description": "List all the the labels for the specified server.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersLabelsGet"
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create server labels",
        "description": "Add a new label to the specified server.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The label to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersLabelsPost"
      }
    },
    "/datacenters/{datacenterId}/servers/{serverId}/labels/{key}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve server labels",
        "description": "Retrieve the properties of the specified server label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersLabelsFindByKey"
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Modify server labels",
        "description": "Modify the specified server label.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The modified label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersLabelsPut"
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete server labels",
        "description": "Delete the specified server label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverId",
            "in": "path",
            "description": "The unique ID of the server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersServersLabelsDelete"
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List volume labels",
        "description": "List all the the labels for the specified volume.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesLabelsGet"
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create volume labels",
        "description": "Add a new label to the specified volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The label to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesLabelsPost"
      }
    },
    "/datacenters/{datacenterId}/volumes/{volumeId}/labels/{key}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve volume labels",
        "description": "Retrieve the properties of the specified volume label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesLabelsFindByKey"
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Modify volume labels",
        "description": "Modify the specified volume label.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The modified label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesLabelsPut"
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete volume labels",
        "description": "Delete the specified volume label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterId",
            "in": "path",
            "description": "The unique ID of the data center.",
            "required": true,
            "type": "string"
          },
          {
            "name": "volumeId",
            "in": "path",
            "description": "The unique ID of the volume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "datacentersVolumesLabelsDelete"
      }
    },
    "/snapshots/{snapshotId}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List snapshot labels",
        "description": "List all the the labels for the specified snapshot.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsLabelsGet"
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create snapshot labels",
        "description": "Add a new label to the specified snapshot.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The label to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsLabelsPost"
      }
    },
    "/snapshots/{snapshotId}/labels/{key}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve snapshot labels",
        "description": "Retrieve the properties of the specified snapshot label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsLabelsFindByKey"
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Modify snapshot labels",
        "description": "Modify the specified snapshot label.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The modified label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsLabelsPut"
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete snapshot labels",
        "description": "Delete the specified snapshot label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "snapshotId",
            "in": "path",
            "description": "The unique ID of the snapshot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "snapshotsLabelsDelete"
      }
    },
    "/ipblocks/{ipblockId}/labels": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "List IP block labels",
        "description": "List all the the labels for the specified IP block.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResources"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksLabelsGet"
      },
      "post": {
        "tags": [
          "Labels"
        ],
        "summary": "Create IP block labels",
        "description": "Add a new label to the specified IP block.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The label to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksLabelsPost"
      }
    },
    "/ipblocks/{ipblockId}/labels/{key}": {
      "get": {
        "tags": [
          "Labels"
        ],
        "summary": "Retrieve IP block labels",
        "description": "Retrieve the properties of the specified IP block label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksLabelsFindByKey"
      },
      "put": {
        "tags": [
          "Labels"
        ],
        "summary": "Modify IP block labels",
        "description": "Modify the specified IP block label.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "label",
            "description": "The modified label",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelResource"
            }
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/LabelResource"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksLabelsPut"
      },
      "delete": {
        "tags": [
          "Labels"
        ],
        "summary": "Delete IP block labels",
        "description": "Delete the specified IP block label.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipblockId",
            "in": "path",
            "description": "The unique ID of the IP block.",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "description": "The label key",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "$ref": "#/parameters/depth"
          },
          {
            "$ref": "#/parameters/contractNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "ipblocksLabelsDelete"
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "List Cubes Templates",
        "description": "List all of the available Cubes Templates.\n\nThis operation is only supported for the Cubes.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Templates"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "templatesGet"
      }
    },
    "/templates/{templateId}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieve Cubes Templates",
        "description": "Retrieve the properties of the specified Cubes Template.\n\nThis operation is only supported for the Cubes.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The unique Template ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Template"
            },
            "headers": {
              "X-RateLimit-Burst": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum number of concurrent API requests allowed."
              },
              "X-RateLimit-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "The average number of requests per minute allowed."
              },
              "X-RateLimit-Remaining": {
                "type": "integer",
                "format": "int32",
                "description": "The number of requests that can still be made without triggering a failure response."
              }
            }
          },
          "default": {
            "$ref": "#/responses/apiError"
          }
        },
        "security": [
          {
            "Basic Authentication": []
          },
          {
            "Token Authentication": []
          }
        ],
        "operationId": "templatesFindById"
      }
    }
  },
  "securityDefinitions": {
    "Basic Authentication": {
      "description": "You will need to base64 encode the string containing your credentials. Separate your username and password with a colon, i.e., username:password and send it as 'Authorization' request header. More details: https://en.wikipedia.org/wiki/Basic_access_authentication",
      "type": "basic"
    },
    "Token Authentication": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Please provide header value as 'Bearer <token>' and don't forget to add 'Bearer' HTTP Authorization Scheme before the token."
    }
  },
  "definitions": {
    "AttachedVolumes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "DatacenterElementMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who created the resource.",
          "readOnly": true
        },
        "createdByUserId": {
          "type": "string",
          "example": "user@example.com",
          "description": "The unique ID of the user who created the resource.",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was modified.",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who last modified the resource.",
          "readOnly": true
        },
        "lastModifiedByUserId": {
          "type": "string",
          "example": "63cef532-26fe-4a64-a4e0-de7c8a506c90",
          "description": "The unique ID of the user who last modified the resource.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "example": "AVAILABLE",
          "description": "State of the resource. *AVAILABLE* There are no pending modification requests for this item; *BUSY* There is at least one modification request pending and all following requests will be queued; *INACTIVE* Resource has been de-provisioned; *DEPLOYING* Resource state DEPLOYING - relevant for Kubernetes cluster/nodepool; *ACTIVE* Resource state ACTIVE - relevant for Kubernetes cluster/nodepool; *FAILED* Resource state FAILED - relevant for Kubernetes cluster/nodepool; *SUSPENDED* Resource state SUSPENDED - relevant for Kubernetes cluster/nodepool; *FAILED_SUSPENDED* Resource state FAILED_SUSPENDED - relevant for Kubernetes cluster; *UPDATING* Resource state UPDATING - relevant for Kubernetes cluster/nodepool; *FAILED_UPDATING* Resource state FAILED_UPDATING - relevant for Kubernetes cluster/nodepool; *DESTROYING* Resource state DESTROYING - relevant for Kubernetes cluster; *FAILED_DESTROYING* Resource state FAILED_DESTROYING - relevant for Kubernetes cluster/nodepool; *TERMINATED* Resource state TERMINATED - relevant for Kubernetes cluster/nodepool.",
          "readOnly": true,
          "enum": [
            "AVAILABLE",
            "INACTIVE",
            "BUSY",
            "DEPLOYING",
            "ACTIVE",
            "FAILED",
            "SUSPENDED",
            "FAILED_SUSPENDED",
            "UPDATING",
            "FAILED_UPDATING",
            "DESTROYING",
            "FAILED_DESTROYING",
            "TERMINATED"
          ]
        }
      }
    },
    "KubernetesNodeMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created.",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was modified.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "example": "AVAILABLE",
          "description": "State of the resource.",
          "readOnly": true,
          "enum": [
            "PROVISIONING",
            "PROVISIONED",
            "READY",
            "TERMINATING",
            "REBUILDING",
            "BUSY"
          ]
        },
        "lastSoftwareUpdatedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the software was updated on the node.",
          "readOnly": true
        }
      }
    },
    "S3KeyMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time when the S3 key was created.",
          "readOnly": true
        }
      }
    },
    "NoStateMetaData": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time when the resource was created.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who has created the resource.",
          "readOnly": true
        },
        "createdByUserId": {
          "type": "string",
          "example": "user@example.com",
          "description": "The unique ID of the user who created the resource.",
          "readOnly": true
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was modified.",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who last modified the resource.",
          "readOnly": true
        },
        "lastModifiedByUserId": {
          "type": "string",
          "example": "63cef532-26fe-4a64-a4e0-de7c8a506c90",
          "description": "The unique ID of the user who last modified the resource.",
          "readOnly": true
        }
      }
    },
    "VolumeProperties": {
      "type": "object",
      "required": [
        "size"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "type": {
          "type": "string",
          "example": "HDD",
          "description": "Hardware type of the volume. DAS (Direct Attached Storage) could be used only in a composite call with a Cube server.",
          "enum": [
            "HDD",
            "SSD",
            "SSD Standard",
            "SSD Premium",
            "DAS",
            "ISO"
          ]
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the volume in GB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the volume should be provisioned. The storage volume will be provisioned on as few physical storage devices as possible, but this cannot be guaranteed upfront. This is uavailable for DAS (Direct Attached Storage), and subject to availability for SSD.",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2",
            "ZONE_3"
          ]
        },
        "image": {
          "type": "string",
          "example": "d6ad1576-fde9-4696-aa41-1ebd75bdaf49",
          "description": "Image or snapshot ID to be used as template for this volume."
        },
        "imagePassword": {
          "type": "string",
          "example": "mypass123",
          "description": "Initial password to be set for installed OS. Works with public images only. Not modifiable, forbidden in update requests. Password rules allows all characters from a-z, A-Z, 0-9."
        },
        "imageAlias": {
          "type": "string"
        },
        "sshKeys": {
          "type": "array",
          "example": [
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/4JNoFQBsaGV974hDmloS5LOvSJjKpXs8Ed437ln712345",
            "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyWh6LZ7f2wxnupVgtK2096bc69Vv9uT2A58lwN3ol0A6mxqlT0f4M1NbarVUxa+MVdxBLud5PvlkbYc9mY91OyzLGZMfVWvhAYz/tJSsDtsgRUl0GFVv332zDWk0i+mAVy0N408OORm5XqV6zvIDaiB/jopyjemUp2rnP7pXU4+98ilZw6ef9DF9y4YZ64mchL5//rcrGm1Lff3pC75X/polGONHeG6m4Vs8eIu+0epJ4PJBxO+rwRYp1zMnn90UCk21KvTcYops2cte7ouXQwkGUq3vmXxnSdvuivK/asdfghjkjhyutry545tgvbn76e4rf43"
          ],
          "description": "Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.",
          "items": {
            "type": "string"
          }
        },
        "bus": {
          "type": "string",
          "example": "VIRTIO",
          "description": "The bus type for this volume; default is VIRTIO.",
          "enum": [
            "VIRTIO",
            "IDE",
            "UNKNOWN"
          ]
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type for this volume.",
          "readOnly": true,
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "WINDOWS2022",
            "LINUX",
            "OTHER"
          ]
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable CPU (no reboot required).",
          "readOnly": false
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable RAM (no reboot required).",
          "readOnly": false
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable NIC (no reboot required).",
          "readOnly": false
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable NIC (no reboot required).",
          "readOnly": false
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable Virt-IO drive (no reboot required).",
          "readOnly": false
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable Virt-IO drive (no reboot required). Not supported with Windows VMs.",
          "readOnly": false
        },
        "deviceNumber": {
          "type": "integer",
          "format": "int64",
          "example": 3,
          "description": "The Logical Unit Number of the storage volume. Null for volumes, not mounted to a VM.",
          "readOnly": true
        },
        "pciSlot": {
          "type": "integer",
          "format": "int32",
          "example": 7,
          "description": "The PCI slot number of the storage volume. Null for volumes, not mounted to a VM.",
          "readOnly": true
        },
        "backupunitId": {
          "type": "string",
          "example": "25f67991-0f51-4efc-a8ad-ef1fb31a481c",
          "description": "The ID of the backup unit that the user has access to. The property is immutable and is only allowed to be set on creation of a new a volume. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property."
        },
        "userData": {
          "type": "string",
          "description": "The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on creation of a new a volume. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property."
        },
        "bootServer": {
          "type": "string",
          "example": "25f67991-0f51-4efc-a8ad-ef1fb31a481c",
          "description": "The UUID of the attached server.",
          "readOnly": true
        }
      }
    },
    "Volume": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "volume",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/VolumeProperties"
        }
      }
    },
    "Cdroms": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "Image": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "image",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ImageProperties"
        }
      }
    },
    "ImageProperties": {
      "type": "object",
      "required": [
        "licenceType"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "description": {
          "type": "string",
          "example": "Image/Snapshot of Ubuntu ",
          "description": "Human-readable description."
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that image/snapshot. ",
          "readOnly": true
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the image in GB.",
          "readOnly": true
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable CPU (no reboot required)."
        },
        "cpuHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable CPU (no reboot required)."
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable RAM (no reboot required)."
        },
        "ramHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable RAM (no reboot required)."
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable NIC (no reboot required)."
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable NIC (no reboot required)."
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable Virt-IO drive (no reboot required)."
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable Virt-IO drive (no reboot required). Not supported with Windows VMs."
        },
        "discScsiHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable SCSI drive (no reboot required)."
        },
        "discScsiHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable SCSI drive (no reboot required). Not supported with Windows VMs."
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type for this image.",
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "WINDOWS2022",
            "LINUX",
            "OTHER"
          ]
        },
        "imageType": {
          "type": "string",
          "example": "HDD",
          "description": "The image type.",
          "readOnly": true,
          "enum": [
            "HDD",
            "CDROM",
            "UNKNOWN"
          ]
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "Indicates whether the image is part of a public repository.",
          "readOnly": true
        },
        "imageAliases": {
          "type": "array",
          "description": "List of image aliases mapped for this Image",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "cloudInit": {
          "type": "string",
          "example": "V1",
          "description": "Cloud init compatibility.",
          "enum": [
            "NONE",
            "V1"
          ]
        }
      }
    },
    "ContractProperties": {
      "type": "object",
      "properties": {
        "contractNumber": {
          "type": "integer",
          "format": "int64",
          "description": "The contract number.",
          "readOnly": true
        },
        "owner": {
          "type": "string",
          "description": "The owner of the contract.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the contract.",
          "readOnly": true
        },
        "regDomain": {
          "type": "string",
          "description": "The registration domain of the contract.",
          "readOnly": true
        },
        "resourceLimits": {
          "$ref": "#/definitions/ResourceLimits"
        }
      }
    },
    "Contract": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "resource",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "properties": {
          "$ref": "#/definitions/ContractProperties"
        }
      }
    },
    "Contracts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "contracts",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Contract"
          }
        }
      }
    },
    "ResourceLimits": {
      "type": "object",
      "required": [
        "coresPerContract",
        "coresPerServer",
        "coresProvisioned",
        "hddLimitPerContract",
        "hddLimitPerVolume",
        "hddVolumeProvisioned",
        "ramPerContract",
        "ramPerServer",
        "ramProvisioned",
        "reservableIps",
        "reservedIpsInUse",
        "reservedIpsOnContract",
        "ssdLimitPerContract",
        "ssdLimitPerVolume",
        "ssdVolumeProvisioned",
        "dasVolumeProvisioned",
        "k8sClusterLimitTotal",
        "k8sClustersProvisioned",
        "nlbLimitTotal",
        "nlbProvisioned",
        "natGatewayLimitTotal",
        "natGatewayProvisioned"
      ],
      "properties": {
        "coresPerServer": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of cores per server."
        },
        "coresPerContract": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of cores per contract."
        },
        "coresProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "The number of cores provisioned."
        },
        "ramPerServer": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum RAM per server."
        },
        "ramPerContract": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum RAM per contract."
        },
        "ramProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "RAM provisioned."
        },
        "hddLimitPerVolume": {
          "type": "integer",
          "format": "int64",
          "description": "HDD limit per volume."
        },
        "hddLimitPerContract": {
          "type": "integer",
          "format": "int64",
          "description": "HDD limit per contract."
        },
        "hddVolumeProvisioned": {
          "type": "integer",
          "format": "int64",
          "description": "HDD volume provisioned."
        },
        "ssdLimitPerVolume": {
          "type": "integer",
          "format": "int64",
          "description": "SSD limit per volume."
        },
        "ssdLimitPerContract": {
          "type": "integer",
          "format": "int64",
          "description": "SSD limit per contract."
        },
        "ssdVolumeProvisioned": {
          "type": "integer",
          "format": "int64",
          "description": "SSD volume provisioned."
        },
        "dasVolumeProvisioned": {
          "type": "integer",
          "format": "int64",
          "description": "DAS (Direct Attached Storage) volume provisioned."
        },
        "reservableIps": {
          "type": "integer",
          "format": "int32",
          "description": "Total reservable IP limit for the customer."
        },
        "reservedIpsOnContract": {
          "type": "integer",
          "format": "int32",
          "description": "Reserved ips for the contract."
        },
        "reservedIpsInUse": {
          "type": "integer",
          "format": "int32",
          "description": "Reserved ips in use."
        },
        "k8sClusterLimitTotal": {
          "type": "integer",
          "format": "int32",
          "description": "K8s clusters total limit."
        },
        "k8sClustersProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "K8s clusters provisioned."
        },
        "nlbLimitTotal": {
          "type": "integer",
          "format": "int32",
          "description": "NLB total limit."
        },
        "nlbProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "NLBs provisioned."
        },
        "natGatewayLimitTotal": {
          "type": "integer",
          "format": "int32",
          "description": "NAT Gateway total limit."
        },
        "natGatewayProvisioned": {
          "type": "integer",
          "format": "int32",
          "description": "NAT Gateways provisioned."
        }
      }
    },
    "BalancedNics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "DataCenterEntities": {
      "type": "object",
      "properties": {
        "servers": {
          "$ref": "#/definitions/Servers"
        },
        "volumes": {
          "$ref": "#/definitions/Volumes"
        },
        "loadbalancers": {
          "$ref": "#/definitions/Loadbalancers"
        },
        "lans": {
          "$ref": "#/definitions/Lans"
        },
        "networkloadbalancers": {
          "$ref": "#/definitions/NetworkLoadBalancers"
        },
        "natgateways": {
          "$ref": "#/definitions/NatGateways"
        }
      }
    },
    "DatacenterProperties": {
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "description": {
          "type": "string",
          "example": "My Production Datacenter",
          "description": "A description for the datacenter, such as staging, production."
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "The physical location where the datacenter will be created. This will be where all of your servers live. Property cannot be modified after datacenter creation (disallowed in update requests)."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "The version of the data center; incremented with every change.",
          "readOnly": true
        },
        "features": {
          "type": "array",
          "example": "[SSD]",
          "description": "List of features supported by the location where this data center is provisioned.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the data center requires extra protection, such as two-step verification."
        },
        "cpuArchitecture": {
          "type": "array",
          "description": "Array of features and CPU families available in a location",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CpuArchitectureProperties"
          }
        }
      }
    },
    "Datacenter": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "datacenter",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/DatacenterProperties"
        },
        "entities": {
          "$ref": "#/definitions/DataCenterEntities"
        }
      }
    },
    "Datacenters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Datacenter"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "FirewallRule": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "firewall-rule",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/FirewallruleProperties"
        }
      }
    },
    "FirewallRules": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "FirewallruleProperties": {
      "type": "object",
      "required": [
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "protocol": {
          "type": "string",
          "example": "TCP",
          "description": "The protocol for the rule. Property cannot be modified after it is created (disallowed in update requests).",
          "enum": [
            "TCP",
            "UDP",
            "ICMP",
            "ANY"
          ]
        },
        "sourceMac": {
          "type": "string",
          "x-nullable": true,
          "example": "00:0a:95:9d:68:16",
          "description": "Only traffic originating from the respective MAC address is allowed. Valid format: aa:bb:cc:dd:ee:ff. Value null allows traffic from any MAC address.",
          "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"
        },
        "sourceIp": {
          "type": "string",
          "x-nullable": true,
          "example": "22.231.113.64",
          "description": "Only traffic originating from the respective IPv4 address is allowed. Value null allows traffic from any IP address.",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "targetIp": {
          "type": "string",
          "x-nullable": true,
          "example": "22.231.113.64",
          "description": "If the target NIC has multiple IP addresses, only the traffic directed to the respective IP address of the NIC is allowed. Value null Value null allows traffic to any target IP address.",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "icmpCode": {
          "type": "integer",
          "x-nullable": true,
          "format": "int32",
          "example": 0,
          "description": "Defines the allowed code (from 0 to 254) if protocol ICMP is chosen. Value null allows all codes.",
          "minimum": 0,
          "maximum": 254
        },
        "icmpType": {
          "type": "integer",
          "x-nullable": true,
          "format": "int32",
          "example": 8,
          "description": "Defines the allowed type (from 0 to 254) if the protocol ICMP is chosen. Value null allows all types.",
          "minimum": 0,
          "maximum": 254
        },
        "portRangeStart": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "Defines the start range of the allowed port (from 1 to 65534) if protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd value null to allow all ports.",
          "minimum": 1,
          "maximum": 65534
        },
        "portRangeEnd": {
          "type": "integer",
          "format": "int32",
          "example": 8,
          "description": "Defines the end range of the allowed port (from 1 to 65534) if the protocol TCP or UDP is chosen. Leave portRangeStart and portRangeEnd null to allow all ports.",
          "minimum": 1,
          "maximum": 65534
        },
        "type": {
          "type": "string",
          "example": "INGRESS",
          "description": "The type of the firewall rule. If not specified, the default INGRESS value is used.",
          "enum": [
            "INGRESS",
            "EGRESS"
          ]
        }
      }
    },
    "FlowLog": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "flow-log",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/FlowLogProperties"
        }
      }
    },
    "FlowLogPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "flow-log",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/FlowLogProperties"
        }
      }
    },
    "FlowLogs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FlowLog"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "FlowLogProperties": {
      "type": "object",
      "required": [
        "name",
        "action",
        "direction",
        "bucket"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "action": {
          "type": "string",
          "example": "ACCEPTED",
          "description": "Specifies the traffic action pattern.",
          "enum": [
            "ACCEPTED",
            "REJECTED",
            "ALL"
          ]
        },
        "direction": {
          "type": "string",
          "example": "INGRESS",
          "description": "Specifies the traffic direction pattern.",
          "enum": [
            "INGRESS",
            "EGRESS",
            "BIDIRECTIONAL"
          ]
        },
        "bucket": {
          "type": "string",
          "example": "bucketName/key",
          "description": "S3 bucket name of an existing IONOS Cloud S3 bucket."
        }
      }
    },
    "IPFailover": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "example": "192.18.2.231"
        },
        "nicUuid": {
          "type": "string",
          "example": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec"
        }
      }
    },
    "LanEntities": {
      "type": "object",
      "properties": {
        "nics": {
          "$ref": "#/definitions/LanNics"
        }
      }
    },
    "LanNics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "LanProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "ipFailover": {
          "type": "array",
          "description": "IP failover configurations for lan",
          "items": {
            "$ref": "#/definitions/IPFailover"
          }
        },
        "pcc": {
          "type": "string",
          "example": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec",
          "description": "The unique identifier of the private Cross-Connect the LAN is connected to, if any."
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "This LAN faces the public Internet."
        }
      }
    },
    "Lan": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "lan",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LanProperties"
        },
        "entities": {
          "$ref": "#/definitions/LanEntities"
        }
      }
    },
    "LanPost": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "lan",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "entities": {
          "$ref": "#/definitions/LanEntities"
        },
        "properties": {
          "$ref": "#/definitions/LanPropertiesPost"
        }
      }
    },
    "Lans": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Lan"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "Loadbalancer": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "loadbalancer",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LoadbalancerProperties"
        },
        "entities": {
          "$ref": "#/definitions/LoadbalancerEntities"
        }
      }
    },
    "LoadbalancerEntities": {
      "type": "object",
      "properties": {
        "balancednics": {
          "$ref": "#/definitions/BalancedNics"
        }
      }
    },
    "LoadbalancerProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "ip": {
          "type": "string",
          "x-nullable": true,
          "example": "22.231.113.64",
          "description": "IPv4 address of the loadbalancer. All attached NICs will inherit this IP. Leaving value null will assign IP automatically.",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "dhcp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the loadbalancer will reserve an IP using DHCP."
        }
      }
    },
    "Loadbalancers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Loadbalancer"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "Nic": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "nic",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NicProperties"
        },
        "entities": {
          "$ref": "#/definitions/NicEntities"
        }
      }
    },
    "NicEntities": {
      "type": "object",
      "properties": {
        "flowlogs": {
          "$ref": "#/definitions/FlowLogs"
        },
        "firewallrules": {
          "$ref": "#/definitions/FirewallRules"
        }
      }
    },
    "NicProperties": {
      "type": "object",
      "required": [
        "lan"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "mac": {
          "type": "string",
          "example": "00:0a:95:9d:68:16",
          "description": "The MAC address of the NIC.",
          "readOnly": true
        },
        "ips": {
          "type": "array",
          "x-nullable": true,
          "description": "Collection of IP addresses, assigned to the NIC. Explicitly assigned public IPs need to come from reserved IP blocks. Passing value null or empty array will assign an IP address automatically.",
          "items": {
            "type": "string"
          }
        },
        "dhcp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the NIC will reserve an IP using DHCP."
        },
        "lan": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "The LAN ID the NIC will be on. If the LAN ID does not exist, it will be implicitly created."
        },
        "firewallActive": {
          "type": "boolean",
          "example": false,
          "description": "Activate or deactivate the firewall. By default, an active firewall without any defined rules will block all incoming network traffic except for the firewall rules that explicitly allows certain protocols, IP addresses and ports."
        },
        "firewallType": {
          "type": "string",
          "example": "INGRESS",
          "description": "The type of firewall rules that will be allowed on the NIC. If not specified, the default INGRESS value is used.",
          "enum": [
            "INGRESS",
            "EGRESS",
            "BIDIRECTIONAL"
          ]
        },
        "deviceNumber": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "The Logical Unit Number (LUN) of the storage volume. Null if this NIC was created using Cloud API and no DCD changes were performed on the Datacenter.",
          "readOnly": true
        },
        "pciSlot": {
          "type": "integer",
          "format": "int32",
          "example": 7,
          "description": "The PCI slot number for the NIC.",
          "readOnly": true
        }
      }
    },
    "Nics": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/Nic"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "NicPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "nic",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NicProperties"
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier."
        },
        "type": {
          "type": "string",
          "example": "resource",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        }
      }
    },
    "ServerEntities": {
      "type": "object",
      "properties": {
        "cdroms": {
          "$ref": "#/definitions/Cdroms"
        },
        "volumes": {
          "$ref": "#/definitions/AttachedVolumes"
        },
        "nics": {
          "$ref": "#/definitions/Nics"
        }
      }
    },
    "ServerProperties": {
      "type": "object",
      "required": [
        "cores",
        "ram"
      ],
      "properties": {
        "templateUuid": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The ID of the template for creating a CUBE server; the available templates for CUBE servers can be found on the templates resource."
        },
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "cores": {
          "type": "integer",
          "format": "int32",
          "example": 4,
          "description": "The total number of cores for the server."
        },
        "ram": {
          "type": "integer",
          "format": "int32",
          "example": 4096,
          "description": "The memory size for the server in MB, such as 2048. Size must be specified in multiples of 256 MB with a minimum of 256 MB; however, if you set ramHotPlug to TRUE then you must use a minimum of 1024 MB. If you set the RAM size more than 240GB, then ramHotPlug will be set to FALSE and can not be set to TRUE unless RAM size not set to less than 240GB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the server should be provisioned.",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2"
          ]
        },
        "vmState": {
          "type": "string",
          "example": "RUNNING",
          "description": "Status of the virtual machine.",
          "readOnly": true,
          "enum": [
            "NOSTATE",
            "RUNNING",
            "BLOCKED",
            "PAUSED",
            "SHUTDOWN",
            "SHUTOFF",
            "CRASHED",
            "SUSPENDED"
          ]
        },
        "bootCdrom": {
          "$ref": "#/definitions/ResourceReference"
        },
        "bootVolume": {
          "$ref": "#/definitions/ResourceReference"
        },
        "cpuFamily": {
          "type": "string",
          "example": "AMD_OPTERON",
          "description": "CPU architecture on which server gets provisioned; not all CPU architectures are available in all datacenter regions; available CPU architectures can be retrieved from the datacenter resource."
        },
        "type": {
          "type": "string",
          "example": "CUBE",
          "description": "server usages: ENTERPRISE or CUBE"
        }
      }
    },
    "GroupEntities": {
      "type": "object",
      "properties": {
        "users": {
          "$ref": "#/definitions/GroupMembers"
        },
        "resources": {
          "$ref": "#/definitions/ResourceGroups"
        }
      }
    },
    "S3KeyProperties": {
      "type": "object",
      "properties": {
        "secretKey": {
          "type": "string",
          "example": "tFVkUARsoeCdntQs2jVSyGG6TMPfPZ+ghnsWj/gG",
          "description": "Secret of the S3 key.",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "description": "Denotes weather the S3 key is active."
        }
      }
    },
    "GroupUsers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "groups",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "description": "Collection of the groups the user is a member of."
    },
    "Group": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/GroupProperties"
        },
        "entities": {
          "$ref": "#/definitions/GroupEntities"
        }
      }
    },
    "S3Key": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/users/15f67991-0f51-4efc-a8ad-ef1fb31a480c/s3keys/78fa888e106456c1482d",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/S3KeyMetadata"
        },
        "properties": {
          "$ref": "#/definitions/S3KeyProperties"
        }
      }
    },
    "Groups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "groups",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      }
    },
    "ResourceEntities": {
      "type": "object",
      "properties": {
        "groups": {
          "$ref": "#/definitions/ResourceGroups"
        }
      }
    },
    "ResourceGroups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Resources assigned to this group."
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "group",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/resources/datacenter/15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ResourceProperties"
        },
        "entities": {
          "$ref": "#/definitions/ResourceEntities"
        }
      },
      "description": "datacenter resource representation"
    },
    "ResourcesUsers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/owns",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Resources owned by a user."
    },
    "UserMetadata": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time the user was created.",
          "readOnly": true
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The time of the last login by the user.",
          "readOnly": true
        }
      }
    },
    "ResourceProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource."
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the resource is multi factor protected or not e.g. using two factor protection. Currently only data centers and snapshots are allowed to be multi factor protected, The value of attribute if null is intentional and it means that the resource doesn't support multi factor protection at all."
        }
      }
    },
    "UserProperties": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastname": {
          "type": "string",
          "description": "The last name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "administrator": {
          "type": "boolean",
          "description": "Indicates if the user has admin rights."
        },
        "forceSecAuth": {
          "type": "boolean",
          "description": "Indicates if secure authentication should be forced on the user."
        },
        "secAuthActive": {
          "type": "boolean",
          "description": "Indicates if secure authentication is active for the user."
        },
        "s3CanonicalUserId": {
          "type": "string",
          "description": "Canonical (S3) ID of the user for a given identity."
        },
        "active": {
          "type": "boolean",
          "description": "Indicates if the user is active."
        }
      }
    },
    "UserPropertiesPut": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastname": {
          "type": "string",
          "description": "The last name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "password": {
          "type": "string",
          "description": "password of the user"
        },
        "administrator": {
          "type": "boolean",
          "description": "Indicates if the user has admin rights."
        },
        "forceSecAuth": {
          "type": "boolean",
          "description": "Indicates if secure authentication should be forced on the user."
        },
        "secAuthActive": {
          "type": "boolean",
          "description": "Indicates if secure authentication is active for the user."
        },
        "active": {
          "type": "boolean",
          "description": "Indicates if the user is active."
        }
      }
    },
    "UserPropertiesPost": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "description": "The first name of the user."
        },
        "lastname": {
          "type": "string",
          "description": "The last name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "administrator": {
          "type": "boolean",
          "description": "Indicates if the user has admin rights."
        },
        "forceSecAuth": {
          "type": "boolean",
          "description": "Indicates if secure authentication should be forced on the user."
        },
        "secAuthActive": {
          "type": "boolean",
          "description": "Indicates if secure authentication is active for the user."
        },
        "password": {
          "type": "string",
          "description": "User password."
        },
        "active": {
          "type": "boolean",
          "description": "Indicates if the user is active."
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "user",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/UserMetadata"
        },
        "properties": {
          "$ref": "#/definitions/UserProperties"
        },
        "entities": {
          "$ref": "#/definitions/UsersEntities"
        }
      }
    },
    "UserPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier."
        },
        "properties": {
          "$ref": "#/definitions/UserPropertiesPut"
        }
      }
    },
    "UserPost": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserPropertiesPost"
        }
      }
    },
    "UsersEntities": {
      "type": "object",
      "properties": {
        "owns": {
          "$ref": "#/definitions/ResourcesUsers"
        },
        "groups": {
          "$ref": "#/definitions/GroupUsers"
        }
      }
    },
    "GroupMembers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "GroupProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "createDataCenter": {
          "type": "boolean",
          "description": "Create data center privilege."
        },
        "createSnapshot": {
          "type": "boolean",
          "description": "Create snapshot privilege."
        },
        "reserveIp": {
          "type": "boolean",
          "description": "Reserve IP block privilege."
        },
        "accessActivityLog": {
          "type": "boolean",
          "description": "Activity log access privilege."
        },
        "createPcc": {
          "type": "boolean",
          "description": "Create pcc privilege."
        },
        "s3Privilege": {
          "type": "boolean",
          "description": "S3 privilege."
        },
        "createBackupUnit": {
          "type": "boolean",
          "description": "Create backup unit privilege."
        },
        "createInternetAccess": {
          "type": "boolean",
          "description": "Create internet access privilege."
        },
        "createK8sCluster": {
          "type": "boolean",
          "description": "Create Kubernetes cluster privilege."
        },
        "createFlowLog": {
          "type": "boolean",
          "description": "Create Flow Logs privilege."
        },
        "accessAndManageMonitoring": {
          "type": "boolean",
          "description": "Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms, alarm-actions etc) using Monotoring-as-a-Service (MaaS)."
        },
        "accessAndManageCertificates": {
          "type": "boolean",
          "description": "Privilege for a group to access and manage certificates."
        }
      }
    },
    "GroupShare": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "resource",
          "description": "resource as generic type",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares/17faab13-13abc-4efc-a8ad-ef1fb31a481b",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/GroupShareProperties"
        }
      }
    },
    "GroupShareProperties": {
      "type": "object",
      "properties": {
        "editPrivilege": {
          "type": "boolean",
          "description": "edit privilege on a resource"
        },
        "sharePrivilege": {
          "type": "boolean",
          "description": "share privilege on a resource"
        }
      }
    },
    "GroupShares": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "shares",
          "description": "Share representing groups and resource relationship",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c/shares",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/GroupShare"
          }
        }
      }
    },
    "Images": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "IpBlock": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "ipblock",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/IpBlockProperties"
        }
      }
    },
    "IpBlockProperties": {
      "type": "object",
      "required": [
        "location",
        "size"
      ],
      "properties": {
        "ips": {
          "type": "array",
          "example": "[\"22.231.113.64\", \"22.231.113.65\", \"22.231.113.66\"]",
          "description": "Collection of IPs, associated with the IP Block.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that IP block. Property cannot be modified after it is created (disallowed in update requests)."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 5,
          "description": "The size of the IP block."
        },
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "ipConsumers": {
          "type": "array",
          "example": "{ \"ipConsumers\": [ { \"ip\" : \"192.18.2.11\", \"mac\" : \"02:01:3f:52:6e:57\", \"nicId\" : \"0e8ee463-1174-46f2-87ba-a5c79c14d8e5\", \"serverId\" : \"e6a3466f-8d6e-4cb6-8001-f4e245f222b7\", \"serverName\" : \"Unnamed Server\", \"datacenterId\" : \"6e54a9ec-aace-4176-8ee4-1c3a704fccfc\", \"datacenterName\" : \"IpConsumerDC\", \"k8sNodePoolUuid\" : \"6e54a9ec-aace-4176-8ee4-1c3a704fcc12\", \"k8sClusterUuid\" : \"6e54a9ec-aace-4176-8ee4-1c3a704fcc23\"} ] }",
          "description": "Read-Only attribute. Lists consumption detail for an individual IP",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IpConsumer"
          }
        }
      }
    },
    "IpBlocks": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IpBlock"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetMandatory"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitMandatory"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "LanPropertiesPost": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "ipFailover": {
          "type": "array",
          "description": "IP failover configurations for lan",
          "items": {
            "$ref": "#/definitions/IPFailover"
          }
        },
        "pcc": {
          "type": "string",
          "example": "3c11273c-b3e1-4ca3-8134-84fd2dd4ebec",
          "description": "The unique identifier of the private Cross-Connect the LAN is connected to, if any."
        },
        "public": {
          "type": "boolean",
          "example": true,
          "description": "This LAN faces the public Internet."
        }
      }
    },
    "LocationProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "features": {
          "type": "array",
          "example": "[SSD]",
          "description": "List of features supported by the location",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "imageAliases": {
          "type": "array",
          "description": "List of image aliases available for the location",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "cpuArchitecture": {
          "type": "array",
          "description": "Array of features and CPU families available in a location",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CpuArchitectureProperties"
          }
        }
      }
    },
    "CpuArchitectureProperties": {
      "type": "object",
      "properties": {
        "cpuFamily": {
          "type": "string",
          "description": "A valid CPU family name.",
          "example": "AMD_OPTERON"
        },
        "maxCores": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of cores available.",
          "example": "62"
        },
        "maxRam": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum RAM size in MB.",
          "example": "245760"
        },
        "vendor": {
          "type": "string",
          "description": "A valid CPU vendor name.",
          "example": "AuthenticAMD"
        }
      }
    },
    "Location": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "location",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/LocationProperties"
        }
      }
    },
    "Locations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      }
    },
    "ConnectableDatacenter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "datacenterId": {
          "type": "string"
        },
        "datacenterName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "IpConsumer": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "nicId": {
          "type": "string"
        },
        "serverId": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "datacenterId": {
          "type": "string"
        },
        "datacenterName": {
          "type": "string"
        },
        "k8sNodePoolUuid": {
          "type": "string"
        },
        "k8sClusterUuid": {
          "type": "string"
        }
      }
    },
    "PrivateCrossConnectProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "description": {
          "type": "string",
          "example": "Private Cross-Connect between datacenter 'A' and datacenter 'B' ",
          "description": "Human-readable description."
        },
        "peers": {
          "type": "array",
          "example": "{ \"peers\": [ { \"id\": \"<lan-id>\", \"name\": \"<lan-name>\", \"datacenterId\": \"<dc-uuid>\",  \"datacenterName\": \"<dc-name>\", \"location\": \"<de/fra>\"} ] }",
          "description": "Read-Only attribute. Lists LAN's joined to this private Cross-Connect.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Peer"
          }
        },
        "connectableDatacenters": {
          "type": "array",
          "example": "{ \"connectableDatacenters\": [ { \"id\": \"<dc-id>\", \"name\": \"<dc-name>\", \"location\": \"<de/fra>\"} ] }",
          "description": "Read-Only attribute. Lists data centers that can be joined to this private Cross-Connect.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConnectableDatacenter"
          }
        }
      }
    },
    "PrivateCrossConnect": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "pcc",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/PrivateCrossConnectProperties"
        }
      }
    },
    "PrivateCrossConnects": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PrivateCrossConnect"
          }
        }
      }
    },
    "RequestStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "request-status",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/RequestStatusMetadata"
        }
      }
    },
    "RequestStatusMetadata": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        },
        "message": {
          "type": "string"
        },
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestTarget"
          }
        }
      }
    },
    "RequestTarget": {
      "type": "object",
      "properties": {
        "target": {
          "$ref": "#/definitions/ResourceReference"
        },
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "RUNNING",
            "DONE",
            "FAILED"
          ]
        }
      }
    },
    "Request": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "request",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/RequestMetadata"
        },
        "properties": {
          "$ref": "#/definitions/RequestProperties"
        }
      }
    },
    "RequestMetadata": {
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "2015-12-04T14:34:09.809Z",
          "description": "The last time the resource was created.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "example": "user@example.com",
          "description": "The user who created the resource.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "example": "45480eb3fbfc31f1d916c1eaa4abdcc3",
          "description": "Resource's Entity Tag as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11  Entity Tag is also added as an 'ETag response header to requests which don't use 'depth' parameter. ",
          "readOnly": true
        },
        "requestStatus": {
          "$ref": "#/definitions/RequestStatus"
        }
      }
    },
    "RequestProperties": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "body": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "Requests": {
      "type": "object",
      "required": [
        "offset",
        "limit",
        "_links"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "requests",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Request"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetMandatory"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitMandatory"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "Resources": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/resources",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "description": "Collection to represent the resource."
    },
    "Info": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "API entry point",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "CLOUD API",
          "description": "Name of the API",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "example": "1.0",
          "description": "Version of the API",
          "readOnly": true
        }
      }
    },
    "Token": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJ0eXAiOiJKV1QiLCJraWQiOiI0MWM1MDFlNC03NGY3LTQwYjctYmMxMi1lZWIzMTAzNThlZDkiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJpb25vc2Nsb3VkIiwiaWF0IjoxNjAyNDg5NTkzMDcxLCJzZXJ2ZXIiOnsidXVpZCI6IjMwNGEwZGVlLWE3OTgtNDNhNi04MzIyLTk3M2NiYzc3Yjg4ZCIsIm5hbWUiOiJTZXJ2ZXIifX0.TND9kJd8GXM39XP5PMH_LnF_99al4MEkI_eoEowPvPztirgM50aZEdg6SuLYQzg-R7vrA7hEFaK4NJb2BUUsIZYVMhjl1QmKUE5TnP0Q2zYnIfNQNZFDu2rKrOydPCkPQwlMVvvZLeBSz7lrKYujF-qZ_yY_6SHlFtt-rg6IznRtup8AFziXtl-9cEsWU92_GCTd5LiriQrsnFAiGRbb0p2_6OYAQAH9FeWu4cxrbSwUmeR7Q4klJyZqFd0fv6UTFBtpSiyci7rsB142MXyLcqM4PrBkgd9P5OFbJYf5lbsb9pW04wLSl9rqoWGgZvWsqpuzosUkQRZt_O5yuYmT9w",
          "description": "The jwToken for the server.",
          "readOnly": true
        }
      }
    },
    "RemoteConsoleUrl": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "url": {
          "type": "string",
          "example": "https://dcd.ionos.com/noVNC?token=eyJ0eXAiOiJKV1QiLCJraWQiOiI0MWM1MDFlNC03NGY3LTQwYjctYmMxMi1lZWIzMTAzNThlZDkiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJpb25vc2Nsb3VkIiwiaWF0IjoxNjAyNDg5NTkzMDcxLCJzZXJ2ZXIiOnsidXVpZCI6IjMwNGEwZGVlLWE3OTgtNDNhNi04MzIyLTk3M2NiYzc3Yjg4ZCIsIm5hbWUiOiJTZXJ2ZXIifX0.TND9kJd8GXM39XP5PMH_LnF_99al4MEkI_eoEowPvPztirgM50aZEdg6SuLYQzg-R7vrA7hEFaK4NJb2BUUsIZYVMhjl1QmKUE5TnP0Q2zYnIfNQNZFDu2rKrOydPCkPQwlMVvvZLeBSz7lrKYujF-qZ_yY_6SHlFtt-rg6IznRtup8AFziXtl-9cEsWU92_GCTd5LiriQrsnFAiGRbb0p2_6OYAQAH9FeWu4cxrbSwUmeR7Q4klJyZqFd0fv6UTFBtpSiyci7rsB142MXyLcqM4PrBkgd9P5OFbJYf5lbsb9pW04wLSl9rqoWGgZvWsqpuzosUkQRZt_O5yuYmT9w",
          "description": "The remote console url with the jwToken parameter for access",
          "readOnly": true
        }
      }
    },
    "Server": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "server",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties"
        },
        "entities": {
          "$ref": "#/definitions/ServerEntities"
        }
      }
    },
    "Servers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "SnapshotProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "description": {
          "type": "string",
          "example": "Image/Snapshot of Ubuntu ",
          "description": "Human-readable description."
        },
        "location": {
          "type": "string",
          "example": "us/las",
          "description": "Location of that image/snapshot. ",
          "readOnly": true
        },
        "size": {
          "type": "number",
          "example": 100,
          "description": "The size of the image in GB.",
          "readOnly": true
        },
        "secAuthProtection": {
          "type": "boolean",
          "example": true,
          "description": "Boolean value representing if the snapshot requires extra protection, such as two-step verification."
        },
        "cpuHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable CPU (no reboot required)."
        },
        "cpuHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable CPU (no reboot required)."
        },
        "ramHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable RAM (no reboot required)."
        },
        "ramHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable RAM (no reboot required)."
        },
        "nicHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable NIC (no reboot required)."
        },
        "nicHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable NIC (no reboot required)."
        },
        "discVirtioHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable Virt-IO drive (no reboot required)."
        },
        "discVirtioHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-unplug capable Virt-IO drive (no reboot required). Not supported with Windows VMs."
        },
        "discScsiHotPlug": {
          "type": "boolean",
          "example": true,
          "description": "Hot-plug capable SCSI drive (no reboot required)."
        },
        "discScsiHotUnplug": {
          "type": "boolean",
          "example": true,
          "description": "Is capable of SCSI drive hot unplug (no reboot required). This works only for non-Windows virtual Machines."
        },
        "licenceType": {
          "type": "string",
          "example": "LINUX",
          "description": "OS type of this snapshot",
          "enum": [
            "UNKNOWN",
            "WINDOWS",
            "WINDOWS2016",
            "WINDOWS2022",
            "LINUX",
            "OTHER"
          ]
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "snapshot",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/SnapshotProperties"
        }
      }
    },
    "Snapshots": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "S3Keys": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of the resource.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "https://<API_HOST>/cloudapi/v6/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/s3keys",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/S3Key"
          }
        }
      }
    },
    "Volumes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "BackupUnitProperties": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "BackupUnitName",
          "description": "The name of the  resource (alphanumeric characters only)."
        },
        "password": {
          "type": "string",
          "example": "mypass123",
          "description": "The password associated with that resource."
        },
        "email": {
          "type": "string",
          "example": "email@email.com",
          "description": "The email associated with the backup unit. Bear in mind that this email does not be the same email as of the user."
        }
      }
    },
    "BackupUnit": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "enum": [
            "backupunit"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/BackupUnitProperties"
        }
      }
    },
    "BackupUnitSSO": {
      "type": "object",
      "properties": {
        "ssoUrl": {
          "type": "string",
          "example": "https://<hostname>/?jwt=eyJ0eXAiO...W47AN5-_x7E",
          "description": "The backup unit single sign on url",
          "readOnly": true
        }
      }
    },
    "S3ObjectStorageSSO": {
      "type": "object",
      "properties": {
        "ssoUrl": {
          "type": "string",
          "example": "https://<hostname>:port/ssosecurelogin.htm?user=dcf5702f-9353-47AN5-_x7E.....htm",
          "description": "The S3 object storage single sign on url",
          "readOnly": true
        }
      }
    },
    "BackupUnits": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/BackupUnit"
          }
        }
      }
    },
    "LabelProperties": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "environment",
          "description": "A label key"
        },
        "value": {
          "type": "string",
          "example": "production",
          "description": "A label value"
        },
        "resourceId": {
          "type": "string",
          "example": "700e1cab-99b2-4c30-ba8c-1d273ddba022",
          "description": "The ID of the resource."
        },
        "resourceType": {
          "type": "string",
          "example": "datacenter",
          "description": "The type of the resource on which the label is applied."
        },
        "resourceHref": {
          "type": "string",
          "example": "https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022",
          "description": "URL to the Resource (absolute path) on which the label is applied."
        }
      }
    },
    "label": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "urn:label:datacenter:700e1cab-99b2-4c30-ba8c-1d273ddba022:environment",
          "description": "Label is identified using standard URN.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/NoStateMetaData"
        },
        "properties": {
          "$ref": "#/definitions/LabelProperties"
        }
      }
    },
    "Labels": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "labels",
          "description": "A unique representation of the label as a resource collection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/label"
          }
        }
      }
    },
    "LabelResourceProperties": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "environment",
          "description": "A label key"
        },
        "value": {
          "type": "string",
          "example": "production",
          "description": "A label value"
        }
      }
    },
    "LabelResource": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "environment",
          "description": "Label on a resource is identified using label key.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "enum": [
            "label"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/NoStateMetaData"
        },
        "properties": {
          "$ref": "#/definitions/LabelResourceProperties"
        }
      }
    },
    "LabelResources": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "labels",
          "description": "A unique representation of the label as a resource collection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/LabelResource"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "S3Bucket": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the S3 bucket"
        }
      }
    },
    "KubernetesClusterProperties": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s",
          "description": "A Kubernetes cluster name. Valid Kubernetes cluster name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the cluster is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the cluster's control plane and for upgrading the cluster's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "availableUpgradeVersions": {
          "type": "array",
          "description": "List of available versions for upgrading the cluster",
          "items": {
            "type": "string"
          },
          "example": [
            "1.16.4",
            "1.17.7"
          ]
        },
        "viableNodePoolVersions": {
          "type": "array",
          "description": "List of versions that may be used for node pools under this cluster",
          "items": {
            "type": "string"
          },
          "example": [
            "1.17.7",
            "1.18.2"
          ]
        },
        "public": {
          "type": "boolean",
          "default": true,
          "description": "The indicator if the cluster is public or private. Be aware that setting it to false is currently in beta phase."
        },
        "apiSubnetAllowList": {
          "type": "array",
          "description": "Access to the K8s API server is restricted to these CIDRs. Traffic, internal to the cluster, is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value is used: 32 for IPv4 and 128 for IPv6.",
          "items": {
            "type": "string"
          },
          "example": [
            "1.2.3.4/32",
            "2002::1234:abcd:ffff:c0a8:101/64",
            "1.2.3.4",
            "2002::1234:abcd:ffff:c0a8:101"
          ]
        },
        "s3Buckets": {
          "type": "array",
          "description": "List of S3 bucket configured for K8s usage. For now it contains only an S3 bucket used to store K8s API audit logs",
          "items": {
            "$ref": "#/definitions/S3Bucket"
          }
        }
      }
    },
    "KubernetesCluster": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "k8s"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesClusterProperties"
        },
        "entities": {
          "$ref": "#/definitions/KubernetesClusterEntities"
        }
      }
    },
    "KubernetesClusterForPost": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "k8s"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesClusterPropertiesForPost"
        },
        "entities": {
          "$ref": "#/definitions/KubernetesClusterEntities"
        }
      }
    },
    "KubernetesClusterForPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "k8s"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesClusterPropertiesForPut"
        },
        "entities": {
          "$ref": "#/definitions/KubernetesClusterEntities"
        }
      }
    },
    "KubernetesClusterEntities": {
      "type": "object",
      "properties": {
        "nodepools": {
          "$ref": "#/definitions/KubernetesNodePools"
        }
      }
    },
    "KubernetesClusters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "k8s",
          "description": "A unique representation of the Kubernetes cluster as a resource collection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesCluster"
          }
        }
      }
    },
    "KubernetesMaintenanceWindow": {
      "type": "object",
      "required": [
        "dayOfTheWeek",
        "time"
      ],
      "properties": {
        "dayOfTheWeek": {
          "type": "string",
          "example": "Monday",
          "description": "The day of the week for a maintenance window.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ]
        },
        "time": {
          "type": "string",
          "example": "13:00:00",
          "description": "The time to use for a maintenance window. Accepted formats are: HH:mm:ss; HH:mm:ss\"Z\"; HH:mm:ssZ. This time may varies by 15 minutes."
        }
      }
    },
    "KubernetesAutoScaling": {
      "type": "object",
      "required": [
        "minNodeCount",
        "maxNodeCount"
      ],
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The minimum number of worker nodes that the managed node group can scale in. Should be set together with 'maxNodeCount'. Value for this attribute must be greater than equal to 1 and less than equal to maxNodeCount."
        },
        "maxNodeCount": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "The maximum number of worker nodes that the managed node pool can scale-out. Should be set together with 'minNodeCount'. Value for this attribute must be greater than equal to 1 and minNodeCount."
        }
      }
    },
    "KubernetesClusterPropertiesForPost": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s",
          "description": "A Kubernetes cluster name. Valid Kubernetes cluster name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the cluster is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the cluster's control plane and for upgrading the cluster's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "public": {
          "type": "boolean",
          "default": true,
          "description": "The indicator if the cluster is public or private. Be aware that setting it to false is currently in beta phase."
        },
        "apiSubnetAllowList": {
          "type": "array",
          "description": "Access to the K8s API server is restricted to these CIDRs. Traffic, internal to the cluster, is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value is used: 32 for IPv4 and 128 for IPv6.",
          "items": {
            "type": "string"
          },
          "example": [
            "1.2.3.4/32",
            "2002::1234:abcd:ffff:c0a8:101/64",
            "1.2.3.4",
            "2002::1234:abcd:ffff:c0a8:101"
          ]
        },
        "s3Buckets": {
          "type": "array",
          "description": "List of S3 bucket configured for K8s usage. For now it contains only an S3 bucket used to store K8s API audit logs",
          "items": {
            "$ref": "#/definitions/S3Bucket"
          }
        }
      }
    },
    "KubernetesClusterPropertiesForPut": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s",
          "description": "A Kubernetes cluster name. Valid Kubernetes cluster name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the cluster is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the cluster's control plane and for upgrading the cluster's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "apiSubnetAllowList": {
          "type": "array",
          "description": "Access to the K8s API server is restricted to these CIDRs. Traffic, internal to the cluster, is not affected by this restriction. If no allowlist is specified, access is not restricted. If an IP without subnet mask is provided, the default value is used: 32 for IPv4 and 128 for IPv6.",
          "items": {
            "type": "string"
          },
          "example": [
            "1.2.3.4/32",
            "2002::1234:abcd:ffff:c0a8:101/64",
            "1.2.3.4",
            "2002::1234:abcd:ffff:c0a8:101"
          ]
        },
        "s3Buckets": {
          "type": "array",
          "description": "List of S3 bucket configured for K8s usage. For now it contains only an S3 bucket used to store K8s API audit logs",
          "items": {
            "$ref": "#/definitions/S3Bucket"
          }
        }
      }
    },
    "KubernetesNodePoolProperties": {
      "type": "object",
      "required": [
        "name",
        "datacenterId",
        "nodeCount",
        "cpuFamily",
        "coresCount",
        "ramSize",
        "availabilityZone",
        "storageType",
        "storageSize"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node-pool",
          "description": "A Kubernetes node pool name. Valid Kubernetes node pool name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "datacenterId": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907521",
          "description": "A valid ID of the data center, to which user has access."
        },
        "nodeCount": {
          "type": "integer",
          "example": 2,
          "description": "The number of nodes that make up the node pool."
        },
        "cpuFamily": {
          "type": "string",
          "example": "AMD_OPTERON",
          "description": "A valid CPU family name."
        },
        "coresCount": {
          "type": "integer",
          "example": 4,
          "description": "The number of cores for the node."
        },
        "ramSize": {
          "type": "integer",
          "example": 2048,
          "description": "The RAM size for the node. Must be set in multiples of 1024 MB, with minimum size is of 2048 MB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the target VM should be provisioned.",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2"
          ]
        },
        "storageType": {
          "type": "string",
          "example": "HDD",
          "description": "The type of hardware for the volume.",
          "enum": [
            "HDD",
            "SSD"
          ]
        },
        "storageSize": {
          "type": "integer",
          "example": 100,
          "description": "The size of the volume in GB. The size should be greater than 10GB."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the nodepool is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the software on the nodepool's nodes and for upgrading the nodepool's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "autoScaling": {
          "description": "property to be set when auto-scaling needs to be enabled for the nodepool. By default, auto-scaling is not enabled.",
          "$ref": "#/definitions/KubernetesAutoScaling"
        },
        "lans": {
          "type": "array",
          "description": "array of additional LANs attached to worker nodes",
          "items": {
            "$ref": "#/definitions/KubernetesNodePoolLan"
          }
        },
        "labels": {
          "description": "map of labels attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolLabel",
          "example": {
            "environment": "test_environment"
          }
        },
        "annotations": {
          "description": "map of annotations attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolAnnotation",
          "example": {
            "imageRepo": "https://hub.doker.local"
          }
        },
        "publicIps": {
          "type": "array",
          "description": "Optional array of reserved public IP addresses to be used by the nodes. IPs must be from same location as the data center used for the node pool. The array must contain one more IP than maximum number possible number of nodes (nodeCount+1 for fixed number of nodes or maxNodeCount+1 when auto scaling is used). The extra IP is used when the nodes are rebuilt.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "82.231.2.5",
            "92.221.2.4"
          ]
        },
        "availableUpgradeVersions": {
          "type": "array",
          "description": "List of available versions for upgrading the node pool.",
          "items": {
            "type": "string"
          },
          "example": [
            "1.16.4",
            "1.17.7"
          ]
        },
        "gatewayIp": {
          "type": "string",
          "example": "198.51.100.100",
          "description": "Public IP address for the gateway performing source NAT for the node pool's nodes belonging to a private cluster. Required only if the node pool belongs to a private cluster."
        }
      }
    },
    "KubernetesNodePoolPropertiesForPost": {
      "type": "object",
      "required": [
        "name",
        "datacenterId",
        "nodeCount",
        "cpuFamily",
        "coresCount",
        "ramSize",
        "availabilityZone",
        "storageType",
        "storageSize"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node-pool",
          "description": "A Kubernetes node pool name. Valid Kubernetes node pool name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "datacenterId": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907521",
          "description": "A valid ID of the data center, to which the user has access."
        },
        "nodeCount": {
          "type": "integer",
          "example": 2,
          "description": "The number of nodes that make up the node pool."
        },
        "cpuFamily": {
          "type": "string",
          "example": "AMD_OPTERON",
          "description": "A valid CPU family name."
        },
        "coresCount": {
          "type": "integer",
          "example": 4,
          "description": "The number of cores for the node."
        },
        "ramSize": {
          "type": "integer",
          "example": 2048,
          "description": "The RAM size for the node. Must be set in multiples of 1024 MB, with minimum size is of 2048 MB."
        },
        "availabilityZone": {
          "type": "string",
          "example": "AUTO",
          "description": "The availability zone in which the target VM should be provisioned.",
          "enum": [
            "AUTO",
            "ZONE_1",
            "ZONE_2"
          ]
        },
        "storageType": {
          "type": "string",
          "example": "HDD",
          "description": "The type of hardware for the volume.",
          "enum": [
            "HDD",
            "SSD"
          ]
        },
        "storageSize": {
          "type": "integer",
          "example": 100,
          "description": "The size of the volume in GB. The size should be greater than 10GB."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the nodepool is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the software on the nodepool's nodes and for upgrading the nodepool's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "autoScaling": {
          "description": "property to be set when auto-scaling needs to be enabled for the nodepool. By default, auto-scaling is not enabled.",
          "$ref": "#/definitions/KubernetesAutoScaling"
        },
        "lans": {
          "type": "array",
          "description": "array of additional LANs attached to worker nodes",
          "items": {
            "$ref": "#/definitions/KubernetesNodePoolLan"
          }
        },
        "labels": {
          "description": "map of labels attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolLabel",
          "example": {
            "environment": "test_environment"
          }
        },
        "annotations": {
          "description": "map of annotations attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolAnnotation",
          "example": {
            "imageRepo": "https://hub.doker.local"
          }
        },
        "publicIps": {
          "type": "array",
          "description": "Optional array of reserved public IP addresses to be used by the nodes. IPs must be from same location as the data center used for the node pool. The array must contain one more IP than the maximum possible number of nodes (nodeCount+1 for fixed number of nodes or maxNodeCount+1 when auto scaling is used). The extra IP is used when the nodes are rebuilt.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "82.231.2.5",
            "92.221.2.4"
          ]
        },
        "gatewayIp": {
          "type": "string",
          "example": "198.51.100.100",
          "description": "Public IP address for the gateway performing source NAT for the node pool's nodes belonging to a private cluster. Required only if the node pool belongs to a private cluster."
        }
      }
    },
    "KubernetesNodePoolPropertiesForPut": {
      "type": "object",
      "required": [
        "nodeCount"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node-pool",
          "description": "A Kubernetes node pool name. Valid Kubernetes node pool name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "nodeCount": {
          "type": "integer",
          "example": 2,
          "description": "The number of nodes that make up the node pool."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the nodepool is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        },
        "maintenanceWindow": {
          "description": "The maintenance window is used for updating the software on the nodepool's nodes and for upgrading the nodepool's K8s version. If no value is given, one is chosen dynamically, so there is no fixed default.",
          "$ref": "#/definitions/KubernetesMaintenanceWindow"
        },
        "autoScaling": {
          "description": "property to be set when auto-scaling needs to be enabled for the nodepool. By default, auto-scaling is not enabled.",
          "$ref": "#/definitions/KubernetesAutoScaling"
        },
        "lans": {
          "type": "array",
          "description": "array of additional LANs attached to worker nodes",
          "items": {
            "$ref": "#/definitions/KubernetesNodePoolLan"
          }
        },
        "labels": {
          "description": "map of labels attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolLabel",
          "example": {
            "environment": "test_environment"
          }
        },
        "annotations": {
          "description": "map of annotations attached to node pool.",
          "$ref": "#/definitions/KubernetesNodePoolAnnotation",
          "example": {
            "imageRepo": "https://hub.doker.local"
          }
        },
        "publicIps": {
          "type": "array",
          "description": "Optional array of reserved public IP addresses to be used by the nodes. IPs must be from same location as the data center used for the node pool. The array must contain one more IP than the maximum possible number of nodes (nodeCount+1 for fixed number of nodes or maxNodeCount+1 when auto scaling is used). The extra IP is used when the nodes are rebuilt.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "82.231.2.5",
            "92.221.2.4"
          ]
        }
      }
    },
    "KubernetesNodePool": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodePoolProperties"
        }
      }
    },
    "KubernetesNodePoolForPost": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodePoolPropertiesForPost"
        }
      }
    },
    "KubernetesNodePoolForPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "nodepool"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodePoolPropertiesForPut"
        }
      }
    },
    "KubernetesNodePools": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools",
          "description": "A unique representation of the Kubernetes node pool as a resource collection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesNodePool"
          }
        }
      }
    },
    "KubernetesNodeProperties": {
      "type": "object",
      "required": [
        "name",
        "k8sVersion"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "k8s-node",
          "description": "A Kubernetes node name."
        },
        "publicIP": {
          "type": "string",
          "example": "192.168.23.2",
          "description": "A valid public IP."
        },
        "privateIP": {
          "type": "string",
          "example": "192.168.23.2",
          "description": "A valid private IP."
        },
        "k8sVersion": {
          "type": "string",
          "example": "1.15.4",
          "description": "The Kubernetes version the nodepool is running. This imposes restrictions on what Kubernetes versions can be run in a cluster's nodepools. Additionally, not all Kubernetes versions are viable upgrade targets for all prior versions."
        }
      }
    },
    "KubernetesNode": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object.",
          "readOnly": true,
          "enum": [
            "node"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/KubernetesNodeMetadata"
        },
        "properties": {
          "$ref": "#/definitions/KubernetesNodeProperties"
        }
      }
    },
    "KubernetesNodes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1e072e52-2ed3-492f-b6b6-c6b116907527/nodepools",
          "description": "A unique representation of the Kubernetes node pool as a resource collection.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of resource within a collection.",
          "readOnly": true,
          "enum": [
            "collection"
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the collection representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/KubernetesNode"
          }
        }
      }
    },
    "KubernetesNodePoolLanRoutes": {
      "type": "object",
      "properties": {
        "network": {
          "type": "string",
          "description": "IPv4 or IPv6 CIDR to be routed via the interface.",
          "example": "1.2.3.4/24"
        },
        "gatewayIp": {
          "type": "string",
          "description": "IPv4 or IPv6 Gateway IP for the route.",
          "example": "10.1.5.16"
        }
      }
    },
    "KubernetesNodePoolLan": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The LAN ID of an existing LAN at the related datacenter",
          "example": 3
        },
        "dhcp": {
          "type": "boolean",
          "example": true,
          "description": "Indicates if the Kubernetes node pool LAN will reserve an IP using DHCP."
        },
        "routes": {
          "type": "array",
          "description": "array of additional LANs attached to worker nodes",
          "items": {
            "$ref": "#/definitions/KubernetesNodePoolLanRoutes"
          }
        }
      }
    },
    "NatGateway": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "nat-gateway",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NatGatewayProperties"
        },
        "entities": {
          "$ref": "#/definitions/NatGatewayEntities"
        }
      }
    },
    "NatGatewayPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "nat-gateway",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NatGatewayProperties"
        }
      }
    },
    "NatGatewayProperties": {
      "type": "object",
      "required": [
        "name",
        "publicIps"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the NAT Gateway.",
          "example": "My NAT Gateway"
        },
        "publicIps": {
          "type": "array",
          "description": "Collection of public IP addresses of the NAT Gateway. Should be customer reserved IP addresses in that location.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "82.231.2.5",
            "92.221.2.4"
          ]
        },
        "lans": {
          "type": "array",
          "description": "Collection of LANs connected to the NAT Gateway. IPs must contain a valid subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.",
          "items": {
            "$ref": "#/definitions/NatGatewayLanProperties"
          }
        }
      }
    },
    "NatGatewayLanProperties": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id for the LAN connected to the NAT Gateway",
          "example": 3
        },
        "gatewayIps": {
          "type": "array",
          "description": "Collection of gateway IP addresses of the NAT Gateway. Will be auto-generated if not provided. Should ideally be an IP belonging to the same subnet as the LAN",
          "items": {
            "type": "string"
          },
          "example": [
            "10.12.1.2/24",
            "10.11.2.5/24",
            "10.11.2.4"
          ]
        }
      }
    },
    "NatGatewayEntities": {
      "type": "object",
      "properties": {
        "rules": {
          "$ref": "#/definitions/NatGatewayRules"
        },
        "flowlogs": {
          "$ref": "#/definitions/FlowLogs"
        }
      }
    },
    "NatGateways": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/NatGateway"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "NatGatewayRules": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/NatGatewayRule"
          }
        }
      }
    },
    "NatGatewayRule": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "nat-gateway-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NatGatewayRuleProperties"
        }
      }
    },
    "NatGatewayRulePut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "nat-gateway-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NatGatewayRuleProperties"
        }
      }
    },
    "NatGatewayRuleProperties": {
      "type": "object",
      "required": [
        "name",
        "sourceSubnet",
        "publicIp"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the NAT Gateway rule.",
          "example": "My NAT Gateway rule"
        },
        "type": {
          "type": "string",
          "description": "Type of the NAT Gateway rule.",
          "example": "SNAT",
          "allOf": [
            {
              "$ref": "#/definitions/NatGatewayRuleType"
            }
          ]
        },
        "protocol": {
          "type": "string",
          "description": "Protocol of the NAT Gateway rule. Defaults to ALL. If protocol is 'ICMP' then targetPortRange start and end cannot be set.",
          "example": "TCP",
          "allOf": [
            {
              "$ref": "#/definitions/NatGatewayRuleProtocol"
            }
          ]
        },
        "sourceSubnet": {
          "type": "string",
          "description": "Source subnet of the NAT Gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets source IP address.",
          "example": "10.0.1.0/24"
        },
        "publicIp": {
          "type": "string",
          "description": "Public IP address of the NAT Gateway rule. Specifies the address used for masking outgoing packets source address field. Should be one of the customer reserved IP address already configured on the NAT Gateway resource",
          "example": "192.18.7.17"
        },
        "targetSubnet": {
          "type": "string",
          "description": "Target or destination subnet of the NAT Gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on the packets destination IP address. If none is provided, rule will match any address.",
          "example": "10.0.1.0/24"
        },
        "targetPortRange": {
          "$ref": "#/definitions/TargetPortRange",
          "description": "Target port range of the NAT Gateway rule. For SNAT rules it specifies which packets this translation rule applies to based on destination port. If none is provided, rule will match any port"
        }
      }
    },
    "NatGatewayRuleType": {
      "type": "string",
      "enum": [
        "SNAT"
      ]
    },
    "NatGatewayRuleProtocol": {
      "type": "string",
      "enum": [
        "TCP",
        "UDP",
        "ICMP",
        "ALL"
      ]
    },
    "TargetPortRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Target port range start associated with the NAT Gateway rule.",
          "example": 10000
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "Target port range end associated with the NAT Gateway rule.",
          "example": 20000
        }
      }
    },
    "KubernetesNodePoolLabel": {
      "type": "object",
      "description": "map of labels attached to node pool.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "KubernetesNodePoolAnnotation": {
      "type": "object",
      "description": "map of annotations attached to node pool.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "NetworkLoadBalancer": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "networkloadbalancer",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NetworkLoadBalancerProperties"
        },
        "entities": {
          "$ref": "#/definitions/NetworkLoadBalancerEntities"
        }
      }
    },
    "NetworkLoadBalancerProperties": {
      "type": "object",
      "required": [
        "name",
        "listenerLan",
        "targetLan"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Network Load Balancer.",
          "example": "My Network Load Balancer"
        },
        "listenerLan": {
          "type": "integer",
          "description": "ID of the listening LAN (inbound).",
          "example": 1
        },
        "ips": {
          "type": "array",
          "description": "Collection of the Network Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan must be customer-reserved IPs for public Load Balancers, and private IPs for private Load Balancers.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "22.231.2.2",
            "22.231.2.3"
          ]
        },
        "targetLan": {
          "type": "integer",
          "description": "ID of the balanced private target LAN (outbound).",
          "example": 2
        },
        "lbPrivateIps": {
          "type": "array",
          "description": "Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain a valid subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.5/24",
            "22.231.2.5/24"
          ]
        }
      }
    },
    "NetworkLoadBalancerEntities": {
      "type": "object",
      "properties": {
        "flowlogs": {
          "$ref": "#/definitions/FlowLogs"
        },
        "forwardingrules": {
          "$ref": "#/definitions/NetworkLoadBalancerForwardingRules"
        }
      }
    },
    "NetworkLoadBalancers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/NetworkLoadBalancer"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "ApplicationLoadBalancerProperties": {
      "type": "object",
      "required": [
        "name",
        "listenerLan",
        "targetLan"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Application Load Balancer.",
          "example": "My Application Load Balancer"
        },
        "listenerLan": {
          "type": "integer",
          "description": "ID of the listening (inbound) LAN.",
          "example": 1
        },
        "ips": {
          "type": "array",
          "description": "Collection of the Application Load Balancer IP addresses. (Inbound and outbound) IPs of the listenerLan are customer-reserved public IPs for the public Load Balancers, and private IPs for the private Load Balancers.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.2",
            "22.231.2.2",
            "22.231.2.3"
          ]
        },
        "targetLan": {
          "type": "integer",
          "description": "ID of the balanced private target LAN (outbound).",
          "example": 2
        },
        "lbPrivateIps": {
          "type": "array",
          "description": "Collection of private IP addresses with the subnet mask of the Application Load Balancer. IPs must contain valid a subnet mask. If no IP is provided, the system will generate an IP with /24 subnet.",
          "items": {
            "type": "string"
          },
          "example": [
            "81.173.1.5/24",
            "22.231.2.5/24"
          ]
        }
      }
    },
    "ApplicationLoadBalancerEntities": {
      "type": "object",
      "properties": {
        "forwardingrules": {
          "$ref": "#/definitions/ApplicationLoadBalancerForwardingRules"
        }
      }
    },
    "ApplicationLoadBalancer": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "applicationloadbalancer",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ApplicationLoadBalancerProperties"
        },
        "entities": {
          "$ref": "#/definitions/ApplicationLoadBalancerEntities"
        }
      }
    },
    "ApplicationLoadBalancers": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApplicationLoadBalancer"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "NetworkLoadBalancerPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "networkloadbalancer",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NetworkLoadBalancerProperties"
        }
      }
    },
    "ApplicationLoadBalancerPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "applicationloadbalancer",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ApplicationLoadBalancerProperties"
        }
      }
    },
    "NetworkLoadBalancerForwardingRule": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "forwarding-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleProperties"
        }
      }
    },
    "NetworkLoadBalancerForwardingRulePut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "forwarding-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleProperties"
        }
      }
    },
    "NetworkLoadBalancerForwardingRules": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/NetworkLoadBalancerForwardingRule"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "NetworkLoadBalancerForwardingRuleProperties": {
      "type": "object",
      "required": [
        "name",
        "algorithm",
        "protocol",
        "listenerIp",
        "listenerPort",
        "targets"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Network Load Balancer forwarding rule.",
          "example": "My Network Load Balancer forwarding rule"
        },
        "algorithm": {
          "type": "string",
          "description": "Balancing algorithm",
          "example": "ROUND_ROBIN",
          "enum": [
            "ROUND_ROBIN",
            "LEAST_CONNECTION",
            "RANDOM",
            "SOURCE_IP"
          ]
        },
        "protocol": {
          "type": "string",
          "description": "Balancing protocol",
          "example": "HTTP",
          "enum": [
            "HTTP",
            "TCP"
          ]
        },
        "listenerIp": {
          "type": "string",
          "description": "Listening (inbound) IP",
          "example": "81.173.1.2"
        },
        "listenerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Listening (inbound) port number; valid range is 1 to 65535.",
          "example": "8080"
        },
        "healthCheck": {
          "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleHealthCheck",
          "description": "Health check properties for Network Load Balancer forwarding rule"
        },
        "targets": {
          "type": "array",
          "description": "Array of items in the collection.",
          "items": {
            "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleTarget"
          }
        }
      }
    },
    "NetworkLoadBalancerForwardingRuleHealthCheck": {
      "type": "object",
      "properties": {
        "clientTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).",
          "example": 50
        },
        "connectTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in milliseconds to wait for a connection attempt to a target to succeed; default is 5000 (five seconds).",
          "example": 5000
        },
        "targetTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in milliseconds that a target can remain inactive; default is 50,000 (50 seconds).",
          "example": 50000
        },
        "retries": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535 and default is three reconnection attempts.",
          "example": 3
        }
      }
    },
    "NetworkLoadBalancerForwardingRuleTarget": {
      "type": "object",
      "required": [
        "ip",
        "port",
        "weight"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "description": "The IP of the balanced target VM.",
          "example": "22.231.2.2"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port of the balanced target service; valid range is 1 to 65535.",
          "example": "8080"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1. Targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best to assign weights in the middle of the range to leave room for later adjustments.",
          "example": "123"
        },
        "healthCheck": {
          "$ref": "#/definitions/NetworkLoadBalancerForwardingRuleTargetHealthCheck",
          "description": "Health check properties for Network Load Balancer forwarding rule target"
        }
      }
    },
    "NetworkLoadBalancerForwardingRuleTargetHealthCheck": {
      "type": "object",
      "properties": {
        "check": {
          "type": "boolean",
          "description": "Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target."
        },
        "checkInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval in milliseconds between consecutive health checks; default is 2000.",
          "example": 2000
        },
        "maintenance": {
          "type": "boolean",
          "description": "Maintenance mode prevents the target from receiving balanced traffic."
        }
      }
    },
    "ApplicationLoadBalancerForwardingRule": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "forwarding-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/ApplicationLoadBalancerForwardingRuleProperties"
        }
      }
    },
    "ApplicationLoadBalancerForwardingRules": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ApplicationLoadBalancerForwardingRule"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetOptional"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitOptional"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "ApplicationLoadBalancerForwardingRuleProperties": {
      "type": "object",
      "required": [
        "name",
        "protocol",
        "listenerIp",
        "listenerPort"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Application Load Balancer forwarding rule.",
          "example": "My Application Load Balancer forwarding rule"
        },
        "protocol": {
          "type": "string",
          "description": "Balancing protocol",
          "example": "HTTP",
          "enum": [
            "HTTP"
          ]
        },
        "listenerIp": {
          "type": "string",
          "description": "Listening (inbound) IP",
          "example": "81.173.1.2"
        },
        "listenerPort": {
          "type": "integer",
          "format": "int32",
          "description": "Listening (inbound) port number; valid range is 1 to 65535.",
          "example": "8080"
        },
        "clientTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).",
          "example": 50
        },
        "serverCertificates": {
          "type": "array",
          "description": "Array of items in the collection.",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "example": [
            "3839d24f-57bd-408e-96ee-8da3d2db5a03",
            "a6b4f7d5-b23a-4f53-b83e-8a6528ab4612"
          ]
        },
        "httpRules": {
          "type": "array",
          "description": "An array of items in the collection. The original order of rules is perserved during processing, except for Forward-type rules are processed after the rules with other action defined. The relative order of Forward-type rules is also preserved during the processing.",
          "items": {
            "$ref": "#/definitions/ApplicationLoadBalancerHttpRule"
          }
        }
      }
    },
    "ApplicationLoadBalancerHttpRule": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the Application Load Balancer HTTP rule.",
          "example": "My Application Load Balancer HTTP rule"
        },
        "type": {
          "type": "string",
          "example": "FORWARD",
          "description": "Type of the HTTP rule.",
          "enum": [
            "FORWARD",
            "STATIC",
            "REDIRECT"
          ]
        },
        "targetGroup": {
          "type": "string",
          "description": "The ID of the target group; mandatory and only valid for FORWARD actions.",
          "example": "96e514d0-73e4-4abd-8fbc-c0f53b79bfae"
        },
        "dropQuery": {
          "type": "boolean",
          "description": "Default is false; valid only for REDIRECT actions.",
          "example": true
        },
        "location": {
          "type": "string",
          "description": "The location for redirecting; mandatory and valid only for REDIRECT actions.",
          "example": "www.ionos.com"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Valid only for REDIRECT and STATIC actions. For REDIRECT actions, default is 301 and possible values are 301, 302, 303, 307, and 308. For STATIC actions, default is 503 and valid range is 200 to 599.",
          "example": "301",
          "enum": [
            301,
            302,
            303,
            307,
            308,
            200,
            503,
            599
          ]
        },
        "responseMessage": {
          "type": "string",
          "description": "The response message of the request; mandatory for STATIC actions.",
          "example": "Application Down"
        },
        "contentType": {
          "type": "string",
          "description": "Valid only for STATIC actions.",
          "example": "text/html"
        },
        "conditions": {
          "type": "array",
          "description": "An array of items in the collection.The action is only performed if each and every condition is met; if no conditions are set, the rule will always be performed.",
          "items": {
            "$ref": "#/definitions/ApplicationLoadBalancerHttpRuleCondition"
          }
        }
      }
    },
    "ApplicationLoadBalancerHttpRuleCondition": {
      "type": "object",
      "required": [
        "type",
        "condition"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "HEADER",
          "description": "Type of the HTTP rule condition.",
          "enum": [
            "HEADER",
            "PATH",
            "QUERY",
            "METHOD",
            "HOST",
            "COOKIE",
            "SOURCE_IP"
          ]
        },
        "condition": {
          "type": "string",
          "example": "STARTS_WITH",
          "description": "Matching rule for the HTTP rule condition attribute; mandatory for HEADER, PATH, QUERY, METHOD, HOST, and COOKIE types; must be null when type is SOURCE_IP.",
          "enum": [
            "EXISTS",
            "CONTAINS",
            "EQUALS",
            "MATCHES",
            "STARTS_WITH",
            "ENDS_WITH"
          ]
        },
        "negate": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the condition is negated or not; the default is False."
        },
        "key": {
          "type": "string",
          "example": "forward-at",
          "description": "Must be null when type is PATH, METHOD, HOST, or SOURCE_IP. Key can only be set when type is COOKIES, HEADER, or QUERY."
        },
        "value": {
          "type": "string",
          "example": "Friday",
          "description": "Mandatory for conditions CONTAINS, EQUALS, MATCHES, STARTS_WITH, ENDS_WITH; must be null when condition is EXISTS; should be a valid CIDR if provided and if type is SOURCE_IP."
        }
      }
    },
    "TargetGroup": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "target-group",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/TargetGroupProperties"
        }
      }
    },
    "TargetGroups": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "collection",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TargetGroup"
          }
        },
        "offset": {
          "$ref": "#/definitions/PaginationOffsetMandatory"
        },
        "limit": {
          "$ref": "#/definitions/PaginationLimitMandatory"
        },
        "_links": {
          "$ref": "#/definitions/PaginationLinks"
        }
      }
    },
    "TargetGroupPut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "applicationloadbalancer",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/TargetGroupProperties"
        }
      }
    },
    "TargetGroupProperties": {
      "type": "object",
      "required": [
        "name",
        "algorithm",
        "protocol"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the target group.",
          "example": "My target group"
        },
        "algorithm": {
          "type": "string",
          "description": "Balancing algorithm",
          "example": "ROUND_ROBIN",
          "enum": [
            "ROUND_ROBIN",
            "LEAST_CONNECTION",
            "RANDOM",
            "SOURCE_IP"
          ]
        },
        "protocol": {
          "type": "string",
          "description": "Balancing protocol",
          "example": "HTTP",
          "enum": [
            "HTTP"
          ]
        },
        "targets": {
          "type": "array",
          "description": "Array of items in the collection.",
          "items": {
            "$ref": "#/definitions/TargetGroupTarget"
          }
        },
        "healthCheck": {
          "$ref": "#/definitions/TargetGroupHealthCheck",
          "description": "Health check properties for target group."
        },
        "httpHealthCheck": {
          "$ref": "#/definitions/TargetGroupHttpHealthCheck",
          "description": "HTTP health check properties for target group."
        }
      }
    },
    "TargetGroupHealthCheck": {
      "type": "object",
      "properties": {
        "checkTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum time in milliseconds to wait for a target to respond to a check. For target VMs with 'Check Interval' set, the lesser of the two  values is used once the TCP connection is established.",
          "example": 2000
        },
        "retries": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of attempts to reconnect to a target after a connection failure. Valid range is 0 to 65535, and default is three reconnection attempts.",
          "example": 3
        }
      }
    },
    "TargetGroupHttpHealthCheck": {
      "type": "object",
      "required": [
        "matchType",
        "response"
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "The path (destination URL) for the HTTP health check request; the default is /.",
          "example": "/monitoring"
        },
        "method": {
          "type": "string",
          "description": "The method for the HTTP health check.",
          "example": "GET",
          "enum": [
            "HEAD",
            "PUT",
            "POST",
            "GET",
            "TRACE",
            "PATCH",
            "OPTIONS"
          ]
        },
        "matchType": {
          "type": "string",
          "description": "",
          "example": "STATUS_CODE",
          "enum": [
            "STATUS_CODE",
            "RESPONSE_BODY"
          ]
        },
        "response": {
          "type": "string",
          "description": "The response returned by the request, depending on the match type.",
          "example": "200"
        },
        "regex": {
          "type": "boolean",
          "description": "",
          "example": false
        },
        "negate": {
          "type": "boolean",
          "description": "",
          "example": false
        }
      }
    },
    "TargetGroupTarget": {
      "type": "object",
      "required": [
        "ip",
        "port",
        "weight"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "description": "The IP of the balanced target VM.",
          "example": "22.231.2.2"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port of the balanced target service; valid range is 1 to 65535.",
          "example": "8080"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Traffic is distributed in proportion to target weight, relative to the combined weight of all targets. A target with higher weight receives a greater share of traffic. Valid range is 0 to 256 and default is 1; targets with weight of 0 do not participate in load balancing but still accept persistent connections. It is best use values in the middle of the range to leave room for later adjustments.",
          "example": "123"
        },
        "healthCheck": {
          "$ref": "#/definitions/TargetGroupTargetHealthCheck",
          "description": "Health check properties for Network Load Balancer forwarding rule target."
        }
      }
    },
    "TargetGroupTargetHealthCheck": {
      "type": "object",
      "properties": {
        "check": {
          "type": "boolean",
          "description": "Makes the target available only if it accepts periodic health check TCP connection attempts; when turned off, the target is considered always available. The health check only consists of a connection attempt to the address and port of the target. Default is True."
        },
        "checkInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval in milliseconds between consecutive health checks; default is 2000.",
          "example": 2000
        },
        "maintenance": {
          "type": "boolean",
          "description": "Maintenance mode prevents the target from receiving balanced traffic."
        }
      }
    },
    "Templates": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "collection",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "items": {
          "type": "array",
          "description": "Array of items in the collection.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Template"
          }
        }
      }
    },
    "ApplicationLoadBalancerForwardingRulePut": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource's unique identifier.",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "example": "forwarding-rule",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "description": "URL to the object representation (absolute path).",
          "example": "<RESOURCE-URI>",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ApplicationLoadBalancerForwardingRuleProperties"
        }
      }
    },
    "Template": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "15f67991-0f51-4efc-a8ad-ef1fb31a480c",
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of object that has been created.",
          "readOnly": true,
          "example": "template",
          "allOf": [
            {
              "$ref": "#/definitions/Type"
            }
          ]
        },
        "href": {
          "type": "string",
          "format": "uri",
          "example": "<RESOURCE-URI>",
          "description": "URL to the object representation (absolute path).",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/DatacenterElementMetadata"
        },
        "properties": {
          "$ref": "#/definitions/TemplateProperties"
        }
      }
    },
    "TemplateProperties": {
      "type": "object",
      "required": [
        "name",
        "cores",
        "ram",
        "storageSize"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My resource",
          "description": "The name of the  resource."
        },
        "cores": {
          "type": "number",
          "example": 2,
          "description": "The CPU cores count."
        },
        "ram": {
          "type": "number",
          "example": 2048,
          "description": "The RAM size in MB."
        },
        "storageSize": {
          "type": "number",
          "example": 10,
          "description": "The storage size in GB."
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "httpStatus": {
          "type": "integer",
          "format": "int32",
          "example": 400,
          "description": "HTTP status code of the operation.",
          "readOnly": true
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorMessage"
          }
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string",
          "example": "123",
          "description": "Application internal error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "example": "Error message example.",
          "description": "A human-readable message.",
          "readOnly": true
        }
      }
    },
    "Type": {
      "type": "string",
      "enum": [
        "datacenter",
        "server",
        "volume",
        "nic",
        "loadbalancer",
        "location",
        "firewall-rule",
        "flow-log",
        "image",
        "snapshot",
        "lan",
        "ipblock",
        "pcc",
        "contract",
        "user",
        "group",
        "collection",
        "resource",
        "request",
        "request-status",
        "s3key",
        "backupunit",
        "label",
        "k8s",
        "nodepool",
        "template",
        "networkloadbalancer",
        "forwarding-rule",
        "natgateway",
        "natgateway-rule",
        "node",
        "applicationloadbalancer",
        "target-group"
      ]
    },
    "PaginationOffsetMandatory": {
      "type": "number",
      "example": 0,
      "description": "The offset, specified in the request (if not is specified, 0 is used by default).",
      "readOnly": true
    },
    "PaginationLimitMandatory": {
      "type": "number",
      "example": 1000,
      "description": "The limit, specified in the request (if not specified, the endpoint's default pagination limit is used).",
      "readOnly": true
    },
    "PaginationOffsetOptional": {
      "type": "number",
      "example": 0,
      "description": "The offset (if specified in the request).",
      "readOnly": true
    },
    "PaginationLimitOptional": {
      "type": "number",
      "example": 1000,
      "description": "The limit (if specified in the request).",
      "readOnly": true
    },
    "PaginationLinks": {
      "type": "object",
      "properties": {
        "prev": {
          "type": "string",
          "format": "uri",
          "example": "<PREVIOUS-PAGE-URI>",
          "description": "URL (with offset and limit parameters) of the previous page; only present if offset is greater than 0.",
          "readOnly": true
        },
        "self": {
          "type": "string",
          "format": "uri",
          "example": "<THIS-PAGE-URI>",
          "description": "URL (with offset and limit parameters) of the current page.",
          "readOnly": true
        },
        "next": {
          "type": "string",
          "format": "uri",
          "example": "<NEXT-PAGE-URI>",
          "description": "URL (with offset and limit parameters) of the next page; only present if offset + limit is less than the total number of elements.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "depth": {
      "name": "depth",
      "in": "query",
      "description": "Controls the detail depth of the response objects. \nGET /datacenters/[ID]\n\t- depth=0: Only direct properties are included; children (servers and other elements) are not included.\n\t- depth=1: Direct properties and children references are included.\n\t- depth=2: Direct properties and children properties are included.\n\t- depth=3: Direct properties and children properties and children's children are included.\n\t- depth=... and so on",
      "required": false,
      "type": "integer",
      "default": 0,
      "maximum": 10,
      "minimum": 0,
      "format": "int32"
    },
    "pretty": {
      "name": "pretty",
      "in": "query",
      "description": "Controls whether the response is pretty-printed (with indentations and new lines).",
      "required": false,
      "type": "boolean",
      "default": true
    },
    "contractNumber": {
      "name": "X-Contract-Number",
      "in": "header",
      "description": "Users with multiple contracts must provide the contract number, for which all API requests are to be executed.",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "networkLoadBalancerId": {
      "in": "path",
      "name": "networkLoadBalancerId",
      "description": "The unique ID of the Network Load Balancer.",
      "required": true,
      "type": "string"
    },
    "applicationLoadBalancerId": {
      "in": "path",
      "name": "applicationLoadBalancerId",
      "description": "The unique ID of the Application Load Balancer.",
      "required": true,
      "type": "string"
    },
    "targetGroupId": {
      "in": "path",
      "name": "targetGroupId",
      "description": "The unique ID of the target group.",
      "required": true,
      "type": "string"
    },
    "natGatewayId": {
      "in": "path",
      "name": "natGatewayId",
      "description": "The unique ID of the NAT Gateway.",
      "required": true,
      "type": "string"
    },
    "flowLogId": {
      "in": "path",
      "name": "flowLogId",
      "description": "The unique ID of the Flow Log.",
      "required": true,
      "type": "string"
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "The first element (from the complete list of the elements) to include in the response (used together with <b><i>limit</i></b> for pagination).",
      "required": false,
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "format": "int32"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of elements to return (use together with offset for pagination).",
      "required": false,
      "type": "integer",
      "default": 1000,
      "maximum": 10000,
      "minimum": 1,
      "format": "int32"
    },
    "limitUser": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of elements to return (use together with <code>offset</code> for pagination).",
      "required": false,
      "type": "integer",
      "default": 100,
      "maximum": 100,
      "minimum": 1,
      "format": "int32"
    },
    "limitDefault100": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of elements to return (use together with offset for pagination).",
      "required": false,
      "type": "integer",
      "default": 100,
      "maximum": 1000,
      "minimum": 1,
      "format": "int32"
    },
    "limitDefault100MaxLimit200": {
      "name": "limit",
      "in": "query",
      "description": "The maximum number of elements to return (used together with <b><i>offset</i></b> for pagination). It must not exceed <b><i>200</i></b>.",
      "required": false,
      "type": "integer",
      "default": 100,
      "maximum": 200,
      "minimum": 1,
      "format": "int32"
    }
  },
  "responses": {
    "apiError": {
      "description": "Any erroneous status code: 400 (parse error), 401 (auth error), 402 (trial access), 403 (insufficient privileges), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type, 422 (validation error), 429 (request rate limit exceeded), 500 (server error), or 503 (maintenance).",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "apiErrorK8sVersion": {
      "description": "Any erroneous status code: 401 (auth error), 404 (not found), 405 (unsupported HTTP method), 415 (unsupported content type), 422 (validation error), 500 (server error), 503 (maintenance)",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}
